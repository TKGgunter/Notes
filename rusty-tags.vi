!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ALLOW_MISSING_POS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const ALLOW_MISSING_POS              = 1 << 31;$/;"	c
ALLOW_NEG_NUMS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const ALLOW_NEG_NUMS                 = 1 << 25;$/;"	c
ALLOW_TAC_VALS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const ALLOW_TAC_VALS   = 1 << 12;$/;"	c
ALLOW_UNK_SC	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const ALLOW_UNK_SC                   = 1 << 14;$/;"	c
ALWAYS_TRUE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^const ALWAYS_TRUE: u64 = u64::MAX;$/;"	c
ARGS_NEGATE_SCS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const ARGS_NEGATE_SCS                = 1 << 29;$/;"	c
ARGS_OVERRIDE_SELF	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const ARGS_OVERRIDE_SELF             = 1 << 38;$/;"	c
ARG_REQUIRED_ELSE_HELP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const ARG_REQUIRED_ELSE_HELP         = 1 << 2;$/;"	c
Action	/home/tgunter/Rust/notes/src/main.rs	/^enum Action {$/;"	g
Alphanumeric	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^pub struct Alphanumeric;$/;"	s
AnyValueId	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^pub struct AnyValueId {$/;"	s
AnyValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^trait AnyValueParser: Send + Sync + 'static {$/;"	t
App	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^pub struct App<'help> {$/;"	s
AppFlags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^pub struct AppFlags(Flags);$/;"	s
AppSettings	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^pub enum AppSettings {$/;"	g
Arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^pub struct Arg<'help> {$/;"	s
ArgAction	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/action.rs	/^pub enum ArgAction {$/;"	g
ArgFlags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^pub struct ArgFlags(Flags);$/;"	s
ArgGroup	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^pub struct ArgGroup<'help> {$/;"	s
ArgMatches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct ArgMatches {$/;"	s
ArgSettings	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^pub enum ArgSettings {$/;"	g
Args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^pub trait Args: FromArgMatches + Sized {$/;"	t
BIN_NAME_BUILT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const BIN_NAME_BUILT                 = 1 << 34;$/;"	c
BLINK	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const BLINK: u8 = 0b0001_0000;$/;"	c
BOLD	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const BOLD: u8 = 0b0000_0001;$/;"	c
BUFFER_SIZE	/home/tgunter/Rust/notes/src/main.rs	/^const BUFFER_SIZE : usize = 128;$/;"	c
BUILT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const BUILT                          = 1 << 33;$/;"	c
Backtrace	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^struct Backtrace(backtrace::Backtrace);$/;"	s
Backtrace	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^struct Backtrace;$/;"	s
Bernoulli	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^pub struct Bernoulli {$/;"	s
BernoulliError	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^pub enum BernoulliError {$/;"	g
BoolValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct BoolValueParser {}$/;"	s
BoolishValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct BoolishValueParser {}$/;"	s
C	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        const C: [[f32; 2]; 2] = [[1.6, 8.0 \/ 45.0], [10.0, 70.0 \/ 9.0]];$/;"	c
C	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        const C: [f32; 2] = [270.0, 330.0 \/ 9.0];$/;"	c
CACHED	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^        static CACHED: clap::__macro_refs::once_cell::sync::Lazy<String> =$/;"	c
CASE_INSENSITIVE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const CASE_INSENSITIVE = 1 << 16;$/;"	c
CHAR_SURROGATE_LEN	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^const CHAR_SURROGATE_LEN: u32 = 0xE000 - CHAR_SURROGATE_START;$/;"	c
CHAR_SURROGATE_START	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^const CHAR_SURROGATE_START: u32 = 0xD800;$/;"	c
CLEAR	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^pub static CLEAR: Style = Style(CLEARV);$/;"	c
CLEARV	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const CLEARV: u8 = 0b0000_0000;$/;"	c
COLON_SPACE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^            const COLON_SPACE: usize = ": ".len();$/;"	c
COLOR_ALWAYS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const COLOR_ALWAYS                   = 1 << 21;$/;"	c
COLOR_AUTO	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const COLOR_AUTO                     = 1 << 22;$/;"	c
COLOR_NEVER	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const COLOR_NEVER                    = 1 << 23;$/;"	c
CONTAINS_LAST	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const CONTAINS_LAST                  = 1 << 37;$/;"	c
Child	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/graph.rs	/^struct Child<T> {$/;"	s
ChunkHintedIterator	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    struct ChunkHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s
Color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^pub enum Color {$/;"	g
ColorChoice	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/color.rs	/^pub enum ColorChoice {$/;"	g
ColoredString	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^pub struct ColoredString {$/;"	s
ColoringFormatter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^pub trait ColoringFormatter {$/;"	t
Colorize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^pub trait Colorize {$/;"	t
Command	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^pub type Command<'help> = App<'help>;$/;"	T
CommandFactory	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^pub trait CommandFactory: Sized {$/;"	t
Conflicts	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^struct Conflicts {$/;"	s
ContextKind	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/context.rs	/^pub enum ContextKind {$/;"	g
ContextValue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/context.rs	/^pub enum ContextValue {$/;"	g
DASH_SPACE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^            const DASH_SPACE: usize = "- ".len();$/;"	c
DEFAULT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^            static DEFAULT: super::ValueParser = super::ValueParser::os_string();$/;"	c
DEFAULT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^            static DEFAULT: super::ValueParser = super::ValueParser::string();$/;"	c
DEFAULT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^        const DEFAULT: super::ArgAction = super::ArgAction::StoreValue;$/;"	c
DEFAULT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^            static DEFAULT: super::ValueParser = super::ValueParser::os_string();$/;"	c
DEFAULT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^            static DEFAULT: super::ValueParser = super::ValueParser::string();$/;"	c
DEFAULT_NO_ARGS_TEMPLATE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    const DEFAULT_NO_ARGS_TEMPLATE: &'static str = "\\$/;"	c
DEFAULT_TEMPLATE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    const DEFAULT_TEMPLATE: &'static str = "\\$/;"	c
DELIM_NOT_SET	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const DELIM_NOT_SET    = 1 << 10;$/;"	c
DENOM	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const DENOM: u32 = 10;$/;"	c
DENOM	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^        const DENOM: u32 = 10;$/;"	c
DERIVE_DISP_ORDER	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DERIVE_DISP_ORDER              = 1 << 19;$/;"	c
DIMMED	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const DIMMED: u8 = 0b0100_0000;$/;"	c
DISABLE_COLORED_HELP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DISABLE_COLORED_HELP           = 1 << 20;$/;"	c
DISABLE_HELP_FLAG	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DISABLE_HELP_FLAG              = 1 << 41;$/;"	c
DISABLE_HELP_SC	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DISABLE_HELP_SC                = 1 << 27;$/;"	c
DISABLE_VERSION_FLAG	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DISABLE_VERSION_FLAG           = 1 << 10;$/;"	c
DISABLE_VERSION_FOR_SC	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DISABLE_VERSION_FOR_SC         = 1 << 4;$/;"	c
DONT_COLLAPSE_ARGS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DONT_COLLAPSE_ARGS             = 1 << 28;$/;"	c
DONT_DELIM_TRAIL	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const DONT_DELIM_TRAIL               = 1 << 24;$/;"	c
Date	/home/tgunter/Rust/notes/src/main.rs	/^struct Date{$/;"	s
DistIter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub struct DistIter<D, R, T> {$/;"	s
DistMap	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub struct DistMap<D, F, T, S> {$/;"	s
DistString	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub trait DistString {$/;"	t
Distribution	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub trait Distribution<T> {$/;"	t
EMPTY	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^        static EMPTY: [Vec<AnyValue>; 0] = [];$/;"	c
EMPTY	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^        static EMPTY: [Vec<OsString>; 0] = [];$/;"	c
EMPTY	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^        static EMPTY: [usize; 0] = [];$/;"	c
EPSILON32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    const EPSILON32: f32 = ::core::f32::EPSILON;$/;"	c
EPSILON64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    const EPSILON64: f64 = ::core::f64::EPSILON;$/;"	c
EXCLUSIVE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const EXCLUSIVE        = 1 << 23;$/;"	c
Element	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    struct Element<N> {$/;"	s
EmptySlice	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^pub struct EmptySlice;$/;"	s
Entry	/home/tgunter/Rust/notes/src/main.rs	/^struct Entry{$/;"	s
EnumValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct EnumValueParser<E: crate::ValueEnum + Clone + Send + Sync + 'static>($/;"	s
Err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^    type Err = String;$/;"	T
Err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^    type Err = String;$/;"	T
Err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    type Err = Error;$/;"	T
Err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_hint.rs	/^    type Err = String;$/;"	T
Err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            type Err = String;$/;"	T
Err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    type Err = ();$/;"	T
Error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    type Error = <Self as FromStr>::Err;$/;"	T
Error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^pub struct Error {$/;"	s
Error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/error.rs	/^pub enum Error {$/;"	g
Error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/unix/mod.rs	/^pub type Error = nix::Error;$/;"	T
Error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/windows/mod.rs	/^pub type Error = io::Error;$/;"	T
ErrorInner	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^struct ErrorInner {$/;"	s
ErrorKind	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/kind.rs	/^pub enum ErrorKind {$/;"	g
F	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^            type F = $ty;$/;"	T
F	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    type F;$/;"	T
FILE_LINK	/home/tgunter/Rust/notes/src/main.rs	/^const FILE_LINK : &'static str= "file_link";$/;"	c
FalseyValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct FalseyValueParser {}$/;"	s
Fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^pub trait Fill {$/;"	t
Flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^enum Flag<'a> {$/;"	g
Flags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^    struct Flags: u64 {$/;"	s
Flags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^    struct Flags: u32 {$/;"	s
FromArgMatches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^pub trait FromArgMatches: Sized {$/;"	t
GAP_SIZE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        const GAP_SIZE: u32 = 0xDFFF - 0xD800 + 1;$/;"	c
GEN_ASCII_STR_CHARSET	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        const GEN_ASCII_STR_CHARSET: &[u8] = b"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\$/;"	c
GLOBAL	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const GLOBAL           = 1 << 3;$/;"	c
GroupedValues	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct GroupedValues<'a> {$/;"	s
HELP_REQUIRED	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const HELP_REQUIRED                  = 1 << 39;$/;"	c
HIDDEN	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const HIDDEN                         = 1 << 11;$/;"	c
HIDDEN	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const HIDDEN           = 1 << 4;$/;"	c
HIDDEN	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const HIDDEN: u8 = 0b0010_0000;$/;"	c
HIDDEN_LONG_H	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const HIDDEN_LONG_H    = 1 << 19;$/;"	c
HIDDEN_SHORT_H	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const HIDDEN_SHORT_H   = 1 << 18;$/;"	c
HIDE_DEFAULT_VAL	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const HIDE_DEFAULT_VAL = 1 << 15;$/;"	c
HIDE_ENV	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const HIDE_ENV         = 1 << 21;$/;"	c
HIDE_ENV_VALS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const HIDE_ENV_VALS    = 1 << 17;$/;"	c
HIDE_POS_VALS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const HIDE_POS_VALS    = 1 << 11;$/;"	c
IGNORE_ERRORS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const IGNORE_ERRORS                  = 1 << 44;$/;"	c
INC	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^        const INC: u64 = 11634580027462260723;$/;"	c
INFER_LONG_ARGS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const INFER_LONG_ARGS                = 1 << 43;$/;"	c
INFER_SUBCOMMANDS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const INFER_SUBCOMMANDS              = 1 << 36;$/;"	c
INIT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/lib.rs	/^static INIT: AtomicBool = AtomicBool::new(false);$/;"	c
INTERNAL_ERROR_MSG	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/lib.rs	/^const INTERNAL_ERROR_MSG: &str = "Fatal internal error. Please consider filing a bug \\$/;"	c
INVALID_UTF8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/lib.rs	/^const INVALID_UTF8: &str = "unexpected invalid UTF-8 code point";$/;"	c
ITALIC	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const ITALIC: u8 = 0b0000_1000;$/;"	c
IndexVec	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub enum IndexVec {$/;"	g
IndexVecIntoIter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub enum IndexVecIntoIter {$/;"	g
IndexVecIter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub enum IndexVecIter<'a> {$/;"	g
Indices	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct Indices<'a> {$/;"	s
IntoFloat	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^pub trait IntoFloat {$/;"	t
IntoIter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    type IntoIter = IndexVecIntoIter;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    type Item = &'a T;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    type Item = &'a str;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    type Item = T;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    type Item = Vec<&'a str>;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    type Item = usize;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    type Item = T;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    type Item = <R as BlockRngCore>::Item;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    type Item = usize;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        type Item = I::Item;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    type Item = &'a T;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    type Item = T;$/;"	T
Item	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    type Item;$/;"	T
IteratorRandom	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^pub trait IteratorRandom: Iterator + Sized {$/;"	t
Key	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/fnv.rs	/^pub trait Key: Hash + Display {$/;"	t
LAST	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const LAST             = 1 << 14;$/;"	c
LEADING_HYPHEN	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const LEADING_HYPHEN                 = 1 << 16;$/;"	c
LOCKED_BY_CLIENT	/home/tgunter/Rust/notes/src/main.rs	/^const LOCKED_BY_CLIENT     : u8 = 1u8;$/;"	c
LOCKED_BY_DAEMON	/home/tgunter/Rust/notes/src/main.rs	/^const LOCKED_BY_DAEMON     : u8 = 4u8;$/;"	c
LOWER_MASK	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^                    const LOWER_MASK: $scalar = !0 >> $half;$/;"	c
LOWER_MASK	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^                const LOWER_MASK: $ty = !0 >> $half;$/;"	c
MAGIC_INIT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/fnv.rs	/^const MAGIC_INIT: u64 = 0x811C_9DC5;$/;"	c
MAX_SEM_COUNT	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/windows/mod.rs	/^const MAX_SEM_COUNT: c_long = 255;$/;"	c
MULTICALL	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const MULTICALL                      = 1 << 45;$/;"	c
MULTIPLE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const MULTIPLE         = Self::MULTIPLE_OCC.bits | Self::MULTIPLE_VALS.bits;$/;"	c
MULTIPLE_OCC	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const MULTIPLE_OCC     = 1 << 1;$/;"	c
MULTIPLE_VALS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const MULTIPLE_VALS    = 1 << 20;$/;"	c
MapData	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/unix.rs	/^pub struct MapData {$/;"	s
MapData	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^pub struct MapData {$/;"	s
MapValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct MapValueParser<P, F> {$/;"	s
Mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            type Mask = $mty;$/;"	T
Mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            type Mask = bool;$/;"	T
Mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    type Mask;$/;"	T
MatchesError	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/error.rs	/^pub enum MatchesError {$/;"	g
MyF32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        struct MyF32 {$/;"	s
N	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const N: u32 = 100_000;$/;"	c
N	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^        const N: u32 = 100_000;$/;"	c
NEXT_LINE_HELP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const NEXT_LINE_HELP                 = 1 << 18;$/;"	c
NEXT_LINE_HELP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const NEXT_LINE_HELP   = 1 << 7;$/;"	c
NO_AUTO_HELP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const NO_AUTO_HELP                   = 1 << 8;$/;"	c
NO_AUTO_VERSION	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const NO_AUTO_VERSION                = 1 << 9;$/;"	c
NO_BIN_NAME	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const NO_BIN_NAME                    = 1 << 13;$/;"	c
NO_EMPTY_VALS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const NO_EMPTY_VALS    = 1 << 2;$/;"	c
NO_OP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const NO_OP                          = 0;$/;"	c
NO_OP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const NO_OP            = 0;$/;"	c
NO_POS_VALUES	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const NO_POS_VALUES                  = 1 << 17;$/;"	c
NUM	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const NUM: u32 = 3;$/;"	c
NUM	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^        const NUM: u32 = 3;$/;"	c
N_REPS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^        const N_REPS: u32 = 5000;$/;"	c
N_REPS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        const N_REPS: u32 = 3000;$/;"	c
NoColor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^pub struct NoColor;$/;"	s
Node	/home/tgunter/Rust/notes/src/main.rs	/^struct Node{$/;"	s
NonEmptyStringValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct NonEmptyStringValueParser {}$/;"	s
Open01	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^pub struct Open01;$/;"	s
OpenClosed01	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^pub struct OpenClosed01;$/;"	s
OsStringValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct OsStringValueParser {}$/;"	s
OsValues	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct OsValues<'a> {$/;"	s
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    type Output = Arg<'help>;$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        type Output = EnumValueParser<E>;$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        type Output;$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            type Output = $flags;$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            type Output = Self;$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^    type Output = Arg<'help>;$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^    enum Output {$/;"	g
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^                type Output = ($ty, $ty);$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            type Output = ($ty, $ty);$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            type Output = (usize, usize);$/;"	T
Output	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    type Output;$/;"	T
P	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const P: f64 = 0.3;$/;"	c
PHI	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^        const PHI: u64 = 0x9e3779b97f4a7c15;$/;"	c
PHI	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^        const PHI: u64 = 0x9e3779b97f4a7c15;$/;"	c
PROPAGATE_VALS_DOWN	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const PROPAGATE_VALS_DOWN            = 1 << 30;$/;"	c
PROPAGATE_VERSION	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const PROPAGATE_VERSION              = 1 << 3;$/;"	c
ParseResult	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^enum ParseResult {$/;"	g
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        type Parser = P::Parser;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        type Parser;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i16>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i32>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i64>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i8>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<u16>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<u32>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<u8>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = RangedU64ValueParser<u64>;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser = ValueParser;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Parser;$/;"	T
Parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^pub trait Parser: FromArgMatches + CommandFactory + Sized {$/;"	t
PathBufValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct PathBufValueParser {}$/;"	s
PossibleValue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^pub struct PossibleValue<'help> {$/;"	s
PossibleValuesParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct PossibleValuesParser(Vec<super::PossibleValue<'static>>);$/;"	s
RANGE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        const RANGE: u32 = 26 + 26 + 10;$/;"	c
RECEIVING_FROM_CLIENT	/home/tgunter/Rust/notes/src/main.rs	/^const RECEIVING_FROM_CLIENT: u8 = 0u8;$/;"	c
RECEIVING_FROM_DAEMON	/home/tgunter/Rust/notes/src/main.rs	/^const RECEIVING_FROM_DAEMON: u8 = 3u8;$/;"	c
REGISTER	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^        static REGISTER: Once = Once::new();$/;"	c
REQUIRED	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const REQUIRED         = 1;$/;"	c
REQUIRE_EQUALS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const REQUIRE_EQUALS   = 1 << 13;$/;"	c
REQ_DELIM	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const REQ_DELIM        = 1 << 9;$/;"	c
RESEEDING_RNG_FORK_COUNTER	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    static RESEEDING_RNG_FORK_COUNTER: AtomicUsize = AtomicUsize::new(0);$/;"	c
REVERSED	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const REVERSED: u8 = 0b0000_0100;$/;"	c
RangedI64ValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct RangedI64ValueParser<T: std::convert::TryFrom<i64> + Clone + Send + Sync = i64> {$/;"	s
RangedU64ValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct RangedU64ValueParser<T: std::convert::TryFrom<u64> = u64> {$/;"	s
RawValues	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct RawValues<'a> {$/;"	s
ReadError	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^pub struct ReadError(std::io::Error);$/;"	s
ReadRng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^pub struct ReadRng<R> {$/;"	s
Record	/home/tgunter/Rust/notes/src/main.rs	/^struct Record{$/;"	s
RegexRef	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^pub enum RegexRef<'a> {$/;"	g
ReseedingCore	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^struct ReseedingCore<R, Rsdr> {$/;"	s
ReseedingRng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^pub struct ReseedingRng<R, Rsdr>(BlockRng<ReseedingCore<R, Rsdr>>)$/;"	s
Result	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^pub type Result<T, E = Error> = StdResult<T, E>;$/;"	T
Results	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    type Results = <R as BlockRngCore>::Results;$/;"	T
Rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^pub trait Rng: RngCore {$/;"	t
Rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^type Rng = super::xoshiro128plusplus::Xoshiro128PlusPlus;$/;"	T
Rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^type Rng = super::xoshiro256plusplus::Xoshiro256PlusPlus;$/;"	T
SCALE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^const SCALE: f64 = 2.0 * (1u64 << 63) as f64;$/;"	c
SC_NEGATE_REQS	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const SC_NEGATE_REQS                 = 1;$/;"	c
SC_REQUIRED	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const SC_REQUIRED                    = 1 << 1;$/;"	c
SC_REQUIRED_ELSE_HELP	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const SC_REQUIRED_ELSE_HELP          = 1 << 7;$/;"	c
SC_UTF8_NONE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const SC_UTF8_NONE                   = 1 << 15;$/;"	c
SHORT_SPACE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^        const SHORT_SPACE: &str =$/;"	c
STRIKETHROUGH	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const STRIKETHROUGH: u8 = 0b1000_0000;$/;"	c
STYLES	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^static STYLES: [(u8, Styles); 8] = [$/;"	c
SUBCOMMAND_PRECEDENCE_OVER_ARG	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const SUBCOMMAND_PRECEDENCE_OVER_ARG = 1 << 40;$/;"	c
SampleBorrow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait SampleBorrow<Borrowed> {$/;"	t
SampleRange	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait SampleRange<T> {$/;"	t
SampleUniform	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait SampleUniform: Sized {$/;"	t
Sampler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            type Sampler = UniformFloat<$ty>;$/;"	T
Sampler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            type Sampler = UniformInt<$ty>;$/;"	T
Sampler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            type Sampler = UniformMyF32;$/;"	T
Sampler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type Sampler = UniformChar;$/;"	T
Sampler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type Sampler = UniformDuration;$/;"	T
Sampler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type Sampler: UniformSampler<X = Self>;$/;"	T
Seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	T
Seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	T
Seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    type Seed = [u8; 16];$/;"	T
Seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    type Seed = [u8; 32];$/;"	T
Shmem	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^pub struct Shmem {$/;"	s
ShmemConf	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^pub struct ShmemConf {$/;"	s
ShmemConfExt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/unix.rs	/^pub struct ShmemConfExt;$/;"	s
ShmemConfExt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^pub struct ShmemConfExt {$/;"	s
ShmemError	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/error.rs	/^pub enum ShmemError {$/;"	g
ShouldColorize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub struct ShouldColorize {$/;"	s
Signal	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/unix/mod.rs	/^pub type Signal = nix::sys::signal::Signal;$/;"	T
Signal	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/windows/mod.rs	/^pub type Signal = DWORD;$/;"	T
SignalType	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/signal.rs	/^pub enum SignalType {$/;"	g
Slice	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^pub struct Slice<'a, T> {$/;"	s
SliceChooseIter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^pub struct SliceChooseIter<'a, S: ?Sized + 'a, T: 'a> {$/;"	s
SliceRandom	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^pub trait SliceRandom {$/;"	t
SmallRng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^pub struct SmallRng(Rng);$/;"	s
Standard	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^pub struct Standard;$/;"	s
State	/home/tgunter/Rust/notes/src/main.rs	/^struct State{$/;"	s
StdRng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^pub struct StdRng(Rng);$/;"	s
StepRng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^pub struct StepRng {$/;"	s
StringValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct StringValueParser {}$/;"	s
Style	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/fmt.rs	/^pub enum Style {$/;"	g
Style	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^pub struct Style(u8);$/;"	s
Styles	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^pub enum Styles {$/;"	g
SubCommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/lib.rs	/^pub struct SubCommand {}$/;"	s
Subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^pub trait Subcommand: FromArgMatches + Sized {$/;"	t
TAB	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^const TAB: &str = "    ";$/;"	c
TAB_WIDTH	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^const TAB_WIDTH: usize = 4;$/;"	c
TAKES_VAL	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const TAKES_VAL        = 1 << 5;$/;"	c
THREAD_RNG_KEY	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    static THREAD_RNG_KEY: Rc<UnsafeCell<ReseedingRng<Core, OsRng>>> = {$/;"	c
THREAD_RNG_RESEED_THRESHOLD	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^const THREAD_RNG_RESEED_THRESHOLD: u64 = 1024 * 64;$/;"	c
TRAILING_VALUES	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const TRAILING_VALUES                = 1 << 32;$/;"	c
TRAILING_VARARG	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const TRAILING_VARARG                = 1 << 12;$/;"	c
Target	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/arg_matcher.rs	/^    type Target = ArgMatches;$/;"	T
Target	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/id.rs	/^    type Target = u64;$/;"	T
Target	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    type Target = str;$/;"	T
ThreadRng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^pub struct ThreadRng {$/;"	s
Trie	/home/tgunter/Rust/notes/src/main.rs	/^struct Trie{$/;"	s
TypedValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub trait TypedValueParser: Clone + Send + Sync + 'static {$/;"	t
UInt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            type UInt = $uty;$/;"	T
UInt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    type UInt;$/;"	T
UInt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^trait UInt: Copy + PartialOrd + Ord + PartialEq + Eq + SampleUniform$/;"	t
UNDERLINE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^const UNDERLINE: u8 = 0b0000_0010;$/;"	c
USE_DELIM	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const USE_DELIM        = 1 << 6;$/;"	c
USE_LONG_FORMAT_FOR_HELP_SC	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const USE_LONG_FORMAT_FOR_HELP_SC    = 1 << 42;$/;"	c
UTF8_NONE	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^        const UTF8_NONE        = 1 << 22;$/;"	c
UnhintedIterator	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    struct UnhintedIterator<I: Iterator + Clone> {$/;"	s
Uniform	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct Uniform<X: SampleUniform>(X::Sampler);$/;"	s
UniformChar	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformChar {$/;"	s
UniformDuration	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformDuration {$/;"	s
UniformDurationMode	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^enum UniformDurationMode {$/;"	g
UniformFloat	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformFloat<X> {$/;"	s
UniformInt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformInt<X> {$/;"	s
UniformMyF32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        struct UniformMyF32(UniformFloat<f32>);$/;"	s
UniformSampler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait UniformSampler: Sized {$/;"	t
UsageToken	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^enum UsageToken {$/;"	g
VALID_ARG_FOUND	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const VALID_ARG_FOUND                = 1 << 35;$/;"	c
Validator	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^type Validator<'a> = dyn FnMut(&str) -> Result<(), Box<dyn Error + Send + Sync>> + Send + 'a;$/;"	T
ValidatorOs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^type ValidatorOs<'a> = dyn FnMut(&OsStr) -> Result<(), Box<dyn Error + Send + Sync>> + Send + 'a;$/;"	T
Value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Value = E;$/;"	T
Value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Value = String;$/;"	T
Value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Value = T;$/;"	T
Value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Value = bool;$/;"	T
Value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Value = std::ffi::OsString;$/;"	T
Value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Value = std::path::PathBuf;$/;"	T
Value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    type Value;$/;"	T
ValueEnum	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^pub trait ValueEnum: Sized + Clone {$/;"	t
ValueHint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_hint.rs	/^pub enum ValueHint {$/;"	g
ValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct ValueParser(ValueParserInner);$/;"	s
ValueParserFactory	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub trait ValueParserFactory {$/;"	t
ValueParserInner	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^enum ValueParserInner {$/;"	g
ValueSource	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/value_source.rs	/^pub enum ValueSource {$/;"	g
Values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct Values<'a> {$/;"	s
Values2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct Values2<T> {$/;"	s
ValuesRef	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^pub struct ValuesRef<'a, T> {$/;"	s
WAIT_ON_ERROR	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^        const WAIT_ON_ERROR                  = 1 << 6;$/;"	c
Weight	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^    pub trait Weight {}$/;"	t
WeightedError	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^pub enum WeightedError {$/;"	g
WeightedIndex	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^    pub struct WeightedIndex<W: Weight> {$/;"	s
WeightedIndex	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^pub struct WeightedIndex<X: SampleUniform + PartialOrd> {$/;"	s
WindowHintedIterator	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    struct WindowHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s
X	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            type X = $ty;$/;"	T
X	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            type X = MyF32;$/;"	T
X	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type X = Duration;$/;"	T
X	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type X = char;$/;"	T
X	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type X;$/;"	T
Xoshiro128PlusPlus	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^pub struct Xoshiro128PlusPlus {$/;"	s
Xoshiro256PlusPlus	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^pub struct Xoshiro256PlusPlus {$/;"	s
_AnonymousValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct _AnonymousValueParser(ValueParser);$/;"	s
_AutoValueParser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub struct _AutoValueParser<T>(std::marker::PhantomData<T>);$/;"	s
_ValueParserViaFactory	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFactory: private::_ValueParserViaFactorySealed {$/;"	t
_ValueParserViaFactorySealed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFactorySealed {}$/;"	t
_ValueParserViaFromStr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromStr: private::_ValueParserViaFromStrSealed {$/;"	t
_ValueParserViaFromStrSealed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromStrSealed {}$/;"	t
_ValueParserViaSelfSealed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub trait _ValueParserViaSelfSealed {}$/;"	t
_ValueParserViaValueEnum	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub trait _ValueParserViaValueEnum: private::_ValueParserViaValueEnumSealed {$/;"	t
_ValueParserViaValueEnumSealed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub trait _ValueParserViaValueEnumSealed {}$/;"	t
__macro_refs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/lib.rs	/^pub mod __macro_refs {$/;"	m
_build	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn _build(&mut self) {$/;"	f
_build_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn _build_all(&mut self) {$/;"	f
_build_bin_names	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn _build_bin_names(&mut self) {$/;"	f
_build_bin_names_internal	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn _build_bin_names_internal(&mut self) {$/;"	f
_clap_count_exprs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! _clap_count_exprs {$/;"	d
_do_parse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn _do_parse($/;"	f
_propagate_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn _propagate_subcommand(&self, sc: &mut Self) {$/;"	f
_verify_positionals	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^fn _verify_positionals(cmd: &Command) -> bool {$/;"	f
about	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn about<O: Into<Option<&'help str>>>(mut self, about: O) -> Self {$/;"	f
action	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn action(mut self, action: ArgAction) -> Self {$/;"	f
add_default_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn add_default_value(&self, arg: &Arg<'help>, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	f
add_defaults	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn add_defaults(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	f
add_env	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn add_env(&mut self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	f
add_word	/home/tgunter/Rust/notes/src/main.rs	/^    fn add_word(&mut self, w: &str){$/;"	f
after_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn after_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	f
after_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn after_long_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	f
aggreg1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn aggreg1() {$/;"	f
aggreg2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn aggreg2() {$/;"	f
aggreg3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn aggreg3() {$/;"	f
alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	f
alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	f
alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn alias(mut self, name: &'help str) -> Self {$/;"	f
alias_method	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^pub mod alias_method {$/;"	m
aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn aliases(mut self, names: &[&'help str]) -> Self {$/;"	f
aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn aliases(mut self, names: &[&'help str]) -> Self {$/;"	f
aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn aliases<I>(mut self, names: I) -> Self$/;"	f
align_to_about	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn align_to_about($/;"	f
all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn all() {$/;"	f
all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all(self) -> bool {$/;"	f
all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all(self) -> bool;$/;"	f
all_finite	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn all_finite(self) -> bool {$/;"	f
all_finite	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all_finite(self) -> bool;$/;"	f
all_le	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn all_le(self, other: Self) -> bool {$/;"	f
all_le	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all_le(self, other: Self) -> bool;$/;"	f
all_lt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn all_lt(self, other: Self) -> bool {$/;"	f
all_lt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all_lt(self, other: Self) -> bool;$/;"	f
allow_external_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn allow_external_subcommands(self, yes: bool) -> Self {$/;"	f
allow_hyphen_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn allow_hyphen_values(self, yes: bool) -> Self {$/;"	f
allow_hyphen_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn allow_hyphen_values(self, yes: bool) -> Self {$/;"	f
allow_invalid_utf8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn allow_invalid_utf8(self, yes: bool) -> Self {$/;"	f
allow_invalid_utf8_for_external_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn allow_invalid_utf8_for_external_subcommands(self, yes: bool) -> Self {$/;"	f
allow_missing_positional	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn allow_missing_positional(self, yes: bool) -> Self {$/;"	f
allow_negative_numbers	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn allow_negative_numbers(self, yes: bool) -> Self {$/;"	f
allow_raw	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^    pub fn allow_raw(mut self, allow: bool) -> Self {$/;"	f
any	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn any(self) -> bool {$/;"	f
any	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn any(self) -> bool;$/;"	f
any_value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn any_value_parser(&self) -> &dyn AnyValueParser {$/;"	f
app_from_crate	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! app_from_crate {$/;"	d
app_send_sync	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/tests.rs	/^fn app_send_sync() {$/;"	f
app_settings_fromstr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^    fn app_settings_fromstr() {$/;"	f
append_keys	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^fn append_keys(keys: &mut Vec<Key>, arg: &Arg, index: usize) {$/;"	f
append_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn append_string<R: Rng + ?Sized>(&self, rng: &mut R, string: &mut String, len: usize);$/;"	f
append_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn append_string<R: Rng + ?Sized>(&self, rng: &mut R, s: &mut String, len: usize) {$/;"	f
append_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn append_string<R: Rng + ?Sized>(&self, rng: &mut R, string: &mut String, len: usize) {$/;"	f
arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn arg<T: Key>(mut self, arg_id: T) -> Self {$/;"	f
arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn arg<A: Into<Arg<'help>>>(mut self, a: A) -> Self {$/;"	f
arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! arg {$/;"	d
arg_enum	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! arg_enum {$/;"	d
arg_from_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn arg_from_usage(self, usage: &'help str) -> Self {$/;"	f
arg_group_send_sync	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    fn arg_group_send_sync() {$/;"	f
arg_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! arg_impl {$/;"	d
arg_next_line_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn arg_next_line_help(&self, arg: &Arg<'help>, spec_vals: &str, longest: usize) -> bool {$/;"	f
arg_required_else_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn arg_required_else_help(self, yes: bool) -> Self {$/;"	f
arg_send_sync	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/tests.rs	/^fn arg_send_sync() {$/;"	f
arg_settings_fromstr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^    fn arg_settings_fromstr() {$/;"	f
args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn args<T: Key>(mut self, ns: &[T]) -> Self {$/;"	f
args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn args<I, T>(mut self, args: I) -> Self$/;"	f
args_conflicts_with_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn args_conflicts_with_subcommands(self, yes: bool) -> Self {$/;"	f
args_from_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn args_from_usage(mut self, usage: &'help str) -> Self {$/;"	f
args_override_self	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn args_override_self(self, yes: bool) -> Self {$/;"	f
args_present	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn args_present(&self) -> bool {$/;"	f
array_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^macro_rules! array_impl {$/;"	d
as_mut_ptr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/unix.rs	/^    pub fn as_mut_ptr(&self) -> *mut u8 {$/;"	f
as_mut_ptr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^    pub fn as_mut_ptr(&self) -> *mut u8 {$/;"	f
as_ptr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn as_ptr(&self) -> *mut u8 {$/;"	f
as_slice	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub unsafe fn as_slice(&self) -> &[u8] {$/;"	f
as_slice_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub unsafe fn as_slice_mut(&mut self) -> &mut [u8] {$/;"	f
as_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/kind.rs	/^    pub fn as_str(self) -> Option<&'static str> {$/;"	f
as_usize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn as_usize(self) -> usize {$/;"	f
as_usize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn as_usize(self) -> usize;$/;"	f
assert_app_flags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^fn assert_app_flags(cmd: &Command) {$/;"	f
assert_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^fn assert_arg(arg: &Arg) {$/;"	f
assert_arg_flags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^fn assert_arg_flags(arg: &Arg) {$/;"	f
assert_defaults	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^fn assert_defaults<'d>($/;"	f
augment_args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_args(cmd: Command<'_>) -> Command<'_> {$/;"	f
augment_args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_args(cmd: Command<'_>) -> Command<'_>;$/;"	f
augment_args_for_update	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_args_for_update(cmd: Command<'_>) -> Command<'_> {$/;"	f
augment_args_for_update	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_args_for_update(cmd: Command<'_>) -> Command<'_>;$/;"	f
augment_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_subcommands(cmd: Command<'_>) -> Command<'_> {$/;"	f
augment_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_subcommands(cmd: Command<'_>) -> Command<'_>;$/;"	f
augment_subcommands_for_update	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_subcommands_for_update(cmd: Command<'_>) -> Command<'_> {$/;"	f
augment_subcommands_for_update	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn augment_subcommands_for_update(cmd: Command<'_>) -> Command<'_>;$/;"	f
author	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn author<S: Into<&'help str>>(mut self, author: S) -> Self {$/;"	f
before_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn before_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	f
before_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn before_long_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	f
bernoulli_distributions_can_be_compared	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn bernoulli_distributions_can_be_compared() {$/;"	f
bgcolor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn bgcolor(&self) -> Option<Color> {$/;"	f
bin_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn bin_name<S: Into<String>>(mut self, name: S) -> Self {$/;"	f
bitor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            fn bitor(mut self, rhs: $settings) -> Self::Output {$/;"	f
bitor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            fn bitor(mut self, rhs: Self) -> Self::Output {$/;"	f
bitor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            fn bitor(self, rhs: Self) -> Self::Output {$/;"	f
black	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn black(self) -> ColoredString$/;"	f
blink	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blink(mut self) -> ColoredString {$/;"	f
blink	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blink(self) -> ColoredString {$/;"	f
blink	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blink(self) -> ColoredString;$/;"	f
block_ctrl_c	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/unix/mod.rs	/^pub unsafe fn block_ctrl_c() -> Result<(), CtrlcError> {$/;"	f
block_ctrl_c	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/windows/mod.rs	/^pub unsafe fn block_ctrl_c() -> Result<(), Error> {$/;"	f
blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blue(self) -> ColoredString$/;"	f
bold	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bold(mut self) -> ColoredString {$/;"	f
bold	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bold(self) -> ColoredString {$/;"	f
bold	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bold(self) -> ColoredString;$/;"	f
borrow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed {$/;"	f
borrow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed;$/;"	f
bright_black	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_black(self) -> ColoredString$/;"	f
bright_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_blue(self) -> ColoredString$/;"	f
bright_color_fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_color_fn() {$/;"	f
bright_cyan	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_cyan(self) -> ColoredString$/;"	f
bright_green	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_green(self) -> ColoredString$/;"	f
bright_magenta	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_magenta(self) -> ColoredString$/;"	f
bright_purple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_purple(self) -> ColoredString$/;"	f
bright_red	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_red(self) -> ColoredString$/;"	f
bright_white	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_white(self) -> ColoredString$/;"	f
bright_yellow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_yellow(self) -> ColoredString$/;"	f
build	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn build(&mut self) {$/;"	f
build_conflict_err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn build_conflict_err($/;"	f
build_conflict_err_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn build_conflict_err_usage(&self, matcher: &ArgMatcher, conflicting_keys: &[Id]) -> String {$/;"	f
case_insensitive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn case_insensitive(self, yes: bool) -> Self {$/;"	f
cast_from_int	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn cast_from_int(i: Self::UInt) -> Self {$/;"	f
cast_from_int	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn cast_from_int(i: Self::UInt) -> Self;$/;"	f
cause	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/error.rs	/^    fn cause(&self) -> Option<&dyn std::error::Error> {$/;"	f
char_to_comp_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^fn char_to_comp_u32(c: char) -> u32 {$/;"	f
check_auto_traits	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^fn check_auto_traits() {$/;"	f
check_auto_traits	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^fn check_auto_traits() {$/;"	f
check_auto_traits	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/error.rs	/^fn check_auto_traits() {$/;"	f
check_auto_traits	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn check_auto_traits() {$/;"	f
checker	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^    macro_rules! checker {$/;"	d
choose	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn choose<I: Iterator<Item = u32>>(iter: I) -> Option<u32> {$/;"	f
choose	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose<R>(&self, rng: &mut R) -> Option<&Self::Item>$/;"	f
choose	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose<R>(mut self, rng: &mut R) -> Option<Self::Item>$/;"	f
choose_multiple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple<R>(&self, rng: &mut R, amount: usize) -> SliceChooseIter<Self, Self::Item>$/;"	f
choose_multiple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple<R>(mut self, rng: &mut R, amount: usize) -> Vec<Self::Item>$/;"	f
choose_multiple_fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple_fill<R>(mut self, rng: &mut R, buf: &mut [Self::Item]) -> usize$/;"	f
choose_multiple_weighted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple_weighted<R, F, X>($/;"	f
choose_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_mut<R>(&mut self, rng: &mut R) -> Option<&mut Self::Item>$/;"	f
choose_stable	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_stable<R>(mut self, rng: &mut R) -> Option<Self::Item>$/;"	f
choose_weighted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_weighted<R, F, B, X>($/;"	f
choose_weighted_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_weighted_mut<R, F, B, X>($/;"	f
clap	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn clap<'help>() -> Command<'help> {$/;"	f
clap_app	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! clap_app {$/;"	d
cleanup	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^    pub unsafe fn cleanup() -> io::Result<()> {$/;"	f
clear	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn clear(self) -> ColoredString {$/;"	f
clear	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn clear(self) -> ColoredString;$/;"	f
clicolor_behavior	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn clicolor_behavior() {$/;"	f
client	/home/tgunter/Rust/notes/src/main.rs	/^fn client(new_note: bool, find_note: bool){$/;"	f
clone	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingCore<R, Rsdr> {$/;"	f
clone	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingRng<R, Rsdr> {$/;"	f
clone_any	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn clone_any(&self) -> Box<dyn AnyValueParser> {$/;"	f
clone_any	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn clone_any(&self) -> Box<dyn AnyValueParser>;$/;"	f
close_daemon	/home/tgunter/Rust/notes/src/main.rs	/^fn close_daemon(){$/;"	f
cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn cmp(&self, other: &Arg) -> Ordering {$/;"	f
cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	f
cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        fn cmp(&self, other: &Self) -> core::cmp::Ordering {$/;"	f
color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn color(self, color: ColorChoice) -> Self {$/;"	f
color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color<S: Into<Color>>(mut self, color: S) -> ColoredString {$/;"	f
color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color<S: Into<Color>>(self, color: S) -> ColoredString {$/;"	f
color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color<S: Into<Color>>(self, color: S) -> ColoredString;$/;"	f
color_fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color_fn() {$/;"	f
command	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn command<'help>() -> Command<'help> {$/;"	f
command	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! command {$/;"	d
command_for_update	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn command_for_update<'help>() -> Command<'help> {$/;"	f
compute_style	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style(&self) -> String {$/;"	f
compute_style_blue_bold	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_blue_bold() {$/;"	f
compute_style_blue_bold_on_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_blue_bold_on_blue() {$/;"	f
compute_style_blue_on_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_blue_on_blue() {$/;"	f
compute_style_bright_blue_on_bright_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_bright_blue_on_bright_blue() {$/;"	f
compute_style_empty_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_empty_string() {$/;"	f
compute_style_simple_bg_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_bg_blue() {$/;"	f
compute_style_simple_bg_bright_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_bg_bright_blue() {$/;"	f
compute_style_simple_bold	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_bold() {$/;"	f
compute_style_simple_fg_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_fg_blue() {$/;"	f
compute_style_simple_fg_bright_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_fg_bright_blue() {$/;"	f
conflicts_with	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn conflicts_with<T: Key>(mut self, arg_id: T) -> Self {$/;"	f
conflicts_with	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn conflicts_with<T: Key>(mut self, id: T) -> Self {$/;"	f
conflicts_with_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn conflicts_with_all(mut self, names: &[&str]) -> Self {$/;"	f
conflicts_with_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn conflicts_with_all(mut self, ns: &[&'help str]) -> Self {$/;"	f
contains	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    pub fn contains(self, style: Styles) -> bool {$/;"	f
contains_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn contains_id(&self, id: &str) -> bool {$/;"	f
context	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn context(&self) -> impl Iterator<Item = (ContextKind, &ContextValue)> {$/;"	f
crate_authors	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! crate_authors {$/;"	d
crate_description	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! crate_description {$/;"	d
crate_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! crate_name {$/;"	d
crate_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! crate_version {$/;"	d
create	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn create(mut self) -> Result<Shmem, ShmemError> {$/;"	f
create_flag_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_flag_usage() {$/;"	f
create_help_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/usage.rs	/^    fn create_help_usage(&self, incl_reqs: bool) -> String {$/;"	f
create_mapping	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/unix.rs	/^pub fn create_mapping(unique_id: &str, map_size: usize) -> Result<MapData, ShmemError> {$/;"	f
create_mapping	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^pub fn create_mapping(unique_id: &str, map_size: usize) -> Result<MapData, ShmemError> {$/;"	f
create_option_usage0	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage0() {$/;"	f
create_option_usage1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage1() {$/;"	f
create_option_usage2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage2() {$/;"	f
create_option_usage3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage3() {$/;"	f
create_option_usage4	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage4() {$/;"	f
create_option_usage5	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage5() {$/;"	f
create_option_usage6	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage6() {$/;"	f
create_option_usage7	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage7() {$/;"	f
create_option_usage8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage8() {$/;"	f
create_option_usage9	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage9() {$/;"	f
create_option_usage_both1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both1() {$/;"	f
create_option_usage_both2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both2() {$/;"	f
create_option_usage_both3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both3() {$/;"	f
create_option_usage_both4	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both4() {$/;"	f
create_option_usage_both5	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both5() {$/;"	f
create_option_usage_both6	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both6() {$/;"	f
create_option_usage_both7	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both7() {$/;"	f
create_option_usage_both8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both8() {$/;"	f
create_option_usage_both_equals1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals1() {$/;"	f
create_option_usage_both_equals2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals2() {$/;"	f
create_option_usage_both_equals3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals3() {$/;"	f
create_option_usage_both_equals4	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals4() {$/;"	f
create_option_usage_both_equals5	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals5() {$/;"	f
create_option_usage_both_equals6	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals6() {$/;"	f
create_option_usage_both_equals7	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals7() {$/;"	f
create_option_usage_both_equals8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_both_equals8() {$/;"	f
create_option_usage_long1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long1() {$/;"	f
create_option_usage_long10	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long10() {$/;"	f
create_option_usage_long2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long2() {$/;"	f
create_option_usage_long3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long3() {$/;"	f
create_option_usage_long4	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long4() {$/;"	f
create_option_usage_long5	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long5() {$/;"	f
create_option_usage_long6	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long6() {$/;"	f
create_option_usage_long7	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long7() {$/;"	f
create_option_usage_long8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long8() {$/;"	f
create_option_usage_long9	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long9() {$/;"	f
create_option_usage_long_equals1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals1() {$/;"	f
create_option_usage_long_equals10	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals10() {$/;"	f
create_option_usage_long_equals2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals2() {$/;"	f
create_option_usage_long_equals3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals3() {$/;"	f
create_option_usage_long_equals4	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals4() {$/;"	f
create_option_usage_long_equals5	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals5() {$/;"	f
create_option_usage_long_equals6	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals6() {$/;"	f
create_option_usage_long_equals7	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals7() {$/;"	f
create_option_usage_long_equals8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals8() {$/;"	f
create_option_usage_long_equals9	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_usage_long_equals9() {$/;"	f
create_option_with_vals1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_with_vals1() {$/;"	f
create_option_with_vals1_def	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_with_vals1_def() {$/;"	f
create_option_with_vals2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_with_vals2() {$/;"	f
create_option_with_vals3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_with_vals3() {$/;"	f
create_option_with_vals4	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_with_vals4() {$/;"	f
create_option_with_vals4_def	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_with_vals4_def() {$/;"	f
create_option_with_vals5	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_option_with_vals5() {$/;"	f
create_positional_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_positional_usage() {$/;"	f
create_positional_usage0	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn create_positional_usage0() {$/;"	f
create_smart_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/usage.rs	/^    fn create_smart_usage(&self, used: &[Id]) -> String {$/;"	f
cyan	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn cyan(self) -> ColoredString$/;"	f
daemon	/home/tgunter/Rust/notes/src/main.rs	/^fn daemon(){$/;"	f
daemon_loop	/home/tgunter/Rust/notes/src/main.rs	/^fn daemon_loop(state: &mut State, file_set: &mut HashSet<u32>, rng: &mut ThreadRng){$/;"	f
debug	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! debug {$/;"	d
debug	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! debug { ($($x:tt)*) => ($/;"	d
debug	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^            macro_rules! debug (($($tt:tt)*) => {{}});$/;"	d
debug_assert	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn debug_assert(mut self) {$/;"	f
debug_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^    fn debug_impl() {$/;"	f
decrease_masked	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn decrease_masked(self, mask: Self::Mask) -> Self {$/;"	f
decrease_masked	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn decrease_masked(self, mask: Self::Mask) -> Self;$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn default(&mut self, arg: &mut Arg<'help>) {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_hint.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/fmt.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/color.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn default() -> ShouldColorize {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn default() -> Self {$/;"	f
default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn default() -> ThreadRng {$/;"	f
default_missing_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_missing_value(self, val: &'help str) -> Self {$/;"	f
default_missing_value_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_missing_value_os(self, val: &'help OsStr) -> Self {$/;"	f
default_missing_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_missing_values(self, vals: &[&'help str]) -> Self {$/;"	f
default_missing_values_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_missing_values_os(mut self, vals: &[&'help OsStr]) -> Self {$/;"	f
default_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_value(self, val: &'help str) -> Self {$/;"	f
default_value_end	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^fn default_value_end(b: u8) -> bool {$/;"	f
default_value_if	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_value_if<T: Key>($/;"	f
default_value_if_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_value_if_os<T: Key>($/;"	f
default_value_ifs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_value_ifs<T: Key>($/;"	f
default_value_ifs_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_value_ifs_os<T: Key>($/;"	f
default_value_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_value_os(self, val: &'help OsStr) -> Self {$/;"	f
default_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_values(self, vals: &[&'help str]) -> Self {$/;"	f
default_values_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn default_values_os(mut self, vals: &[&'help OsStr]) -> Self {$/;"	f
deref	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/arg_matcher.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/id.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn deref(&self) -> &str {$/;"	f
describe	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/error.rs	/^    fn describe(&self) -> &str {$/;"	f
description	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
detect_duplicate_flags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^fn detect_duplicate_flags(flags: &[Flag], short_or_long: &str) {$/;"	f
did_you_mean_error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn did_you_mean_error($/;"	f
dimmed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn dimmed(mut self) -> ColoredString {$/;"	f
dimmed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn dimmed(self) -> ColoredString {$/;"	f
dimmed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn dimmed(self) -> ColoredString;$/;"	f
disable_colored_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn disable_colored_help(self, yes: bool) -> Self {$/;"	f
disable_help_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn disable_help_flag(self, yes: bool) -> Self {$/;"	f
disable_help_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn disable_help_subcommand(self, yes: bool) -> Self {$/;"	f
disable_version_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn disable_version_flag(self, yes: bool) -> Self {$/;"	f
display_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn display_name<S: Into<String>>(mut self, name: S) -> Self {$/;"	f
display_order	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	f
display_order	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	f
display_width_handles_emojis	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn display_width_handles_emojis() {$/;"	f
display_width_handles_non_ascii	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn display_width_handles_non_ascii() {$/;"	f
do_test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^            fn do_test<I: Iterator<Item = u32>>(iter: I, v: &[u32]) {$/;"	f
do_test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn do_test<I: Iterator<Item = u32>>(iter: I, v: &[u32]) {$/;"	f
dont_collapse_args_in_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn dont_collapse_args_in_usage(self, yes: bool) -> Self {$/;"	f
dont_delimit_trailing_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn dont_delimit_trailing_values(self, yes: bool) -> Self {$/;"	f
drop	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/unix.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^    fn drop(&mut self) {$/;"	f
empty_is_none	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn empty_is_none() {$/;"	f
empty_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn empty_values(self, yes: bool) -> Self {$/;"	f
ensure_typed_applies_to_parse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn ensure_typed_applies_to_parse() {$/;"	f
env	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn env(self, name: &'help str) -> Self {$/;"	f
env_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn env_os(mut self, name: &'help OsStr) -> Self {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn eq(&self, other: &Arg<'help>) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^    fn eq(&self, other: &Flag) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^    fn eq(&self, rhs: &&str) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^    fn eq(&self, rhs: &OsStr) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^    fn eq(&self, rhs: &char) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^    fn eq(&self, rhs: &str) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^    fn eq(&self, rhs: &usize) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/matched_arg.rs	/^    fn eq(&self, other: &MatchedArg) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/id.rs	/^    fn eq(&self, other: &Id) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn eq(&self, other: &IndexVec) -> bool {$/;"	f
error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn error(&mut self, kind: ErrorKind, message: impl std::fmt::Display) -> Error {$/;"	f
error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^        fn error() {$/;"	f
error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! error { ($($x:tt)*) => ($/;"	d
error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^            macro_rules! error (($($tt:tt)*) => {{}});$/;"	d
escape	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^fn escape(s: impl AsRef<str>) -> String {$/;"	f
escape_inner_reset_sequences	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_inner_reset_sequences(&self) -> Cow<str> {$/;"	f
escape_reset_sequence_spec_should_do_nothing_on_empty_strings	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_do_nothing_on_empty_strings() {$/;"	f
escape_reset_sequence_spec_should_do_nothing_on_string_with_no_reset	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_do_nothing_on_string_with_no_reset() {$/;"	f
escape_reset_sequence_spec_should_replace_inner_reset_sequence_with_current_style	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_replace_inner_reset_sequence_with_current_style() {$/;"	f
escape_reset_sequence_spec_should_replace_multiple_inner_reset_sequences_with_current_style	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_replace_multiple_inner_reset_sequences_with_current_style()$/;"	f
exclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn exclusive(self, yes: bool) -> Self {$/;"	f
exit	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn exit(&self) -> ! {$/;"	f
exposing_tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn exposing_tests() {$/;"	f
extract	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn extract(self, index: usize) -> Self {$/;"	f
fails_arg_required_unless	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn fails_arg_required_unless(&self, a: &Arg<'help>, matcher: &ArgMatcher) -> bool {$/;"	f
fgcolor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn fgcolor(&self) -> Option<Color> {$/;"	f
fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn fill<T: Fill + ?Sized>(&mut self, dest: &mut T) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_in_global_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/arg_matcher.rs	/^    fn fill_in_global_values($/;"	f
find_duplicates	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^fn find_duplicates<T: PartialEq>(slice: &[T]) -> impl Iterator<Item = (&T, &T)> {$/;"	f
find_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn find_subcommand<T>(&self, name: &T) -> Option<&App<'help>>$/;"	f
find_subcommand_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn find_subcommand_mut<T>(&mut self, name: &T) -> Option<&mut App<'help>>$/;"	f
finish	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/fnv.rs	/^    fn finish(&self) -> u64 {$/;"	f
finite_mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn finite_mask(self) -> Self::Mask {$/;"	f
finite_mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn finite_mask(self) -> Self::Mask;$/;"	f
five	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn five() {$/;"	f
flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/features/suggestions.rs	/^    fn flag() {$/;"	f
flag_display	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn flag_display() {$/;"	f
flag_display_multiple_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn flag_display_multiple_aliases() {$/;"	f
flag_display_multiple_short_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn flag_display_multiple_short_aliases() {$/;"	f
flag_display_single_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn flag_display_single_alias() {$/;"	f
flag_display_single_short_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn flag_display_single_short_alias() {$/;"	f
flink	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn flink<S: AsRef<Path>>(mut self, path: S) -> Self {$/;"	f
float_impls	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^macro_rules! float_impls {$/;"	d
flush	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> Result<(), std::fmt::Error> {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/kind.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn fmt(&self, _: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/fmt.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/error.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/id.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/error.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub const fn bool() -> Self {$/;"	c
fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub const fn os_string() -> Self {$/;"	c
fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub const fn path_buf() -> Self {$/;"	c
fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub const fn string() -> Self {$/;"	c
foo	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^        fn foo<T: Send + Sync>(_: T) {}$/;"	f
foo	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/tests.rs	/^    fn foo<T: Send + Sync>(_: T) {}$/;"	f
for_app	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn for_app(kind: ErrorKind, cmd: &Command, colorizer: Colorizer, info: Vec<String>) -> Self {$/;"	f
forbid_empty_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn forbid_empty_values(self, yes: bool) -> Self {$/;"	f
force_create_flink	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn force_create_flink(mut self) -> Self {$/;"	f
fork	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^mod fork {$/;"	m
fork_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    extern "C" fn fork_handler() {$/;"	f
format	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn format(&mut self, cmd: &Command, usage: String) {$/;"	f
format	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn format(mut self, cmd: &mut Command) -> Self {$/;"	f
format	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^    fn format(out: String, _fg: Color, _bg: Color, _style: Style) -> String {$/;"	f
format	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^    fn format(out: String, fg: Color, bg: Color, style: Style) -> String;$/;"	f
format_bounds	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn format_bounds(&self) -> String {$/;"	f
format_error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^fn format_error<I: CommandFactory>(err: crate::Error) -> crate::Error {$/;"	f
formatted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn formatted(&self) -> Cow<'_, Colorizer> {$/;"	f
formatted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn formatted(&self) -> Cow<Colorizer> {$/;"	f
formatting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn formatting() {$/;"	f
four	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn four() {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn from(a: &Arg<'help>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    fn from(g: &ArgGroup<'help>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    fn from(y: &'help Yaml) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_predicate.rs	/^    fn from(other: Option<&'help std::ffi::OsStr>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    fn from(s: &'help &'help str) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    fn from(s: &'help str) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn from(r: &'a Regex) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn from(r: &'a RegexSet) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn from(r: Regex) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn from(r: RegexSet) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(p: P) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(p: _AnonymousValueParser) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(range: B) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(value: std::ops::Range<i64>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeFrom<i64>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeFull) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeInclusive<i64>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeTo<i64>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeToInclusive<i64>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(values: I) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn from(values: [P; C]) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn from(e: fmt::Error) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn from(e: io::Error) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn from(inner: Colorizer) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn from(inner: String) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            fn from(setting: $settings) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^    fn from(_: &'a A) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/id.rs	/^    fn from(val: T) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    fn from(src: &str) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    fn from(src: String) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn from(s: &'a str) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/error.rs	/^    fn from(e: platform::Error) -> Error {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::Range<X>) -> Uniform<X> {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::RangeInclusive<X>) -> Uniform<X> {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn from(v: Vec<u32>) -> Self {$/;"	f
from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn from(v: Vec<usize>) -> Self {$/;"	f
from_arg_matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error> {$/;"	f
from_arg_matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error>;$/;"	f
from_arg_matches_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_arg_matches_mut(matches: &mut ArgMatches) -> Result<Self, Error> {$/;"	f
from_args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_args() -> Self {$/;"	f
from_args_safe	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_args_safe() -> Result<Self, Error> {$/;"	f
from_clap	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_clap(matches: &ArgMatches) -> Self {$/;"	f
from_env	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn from_env() -> Self {$/;"	f
from_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_iter<I, T>(itr: I) -> Self$/;"	f
from_iter_safe	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_iter_safe<I, T>(itr: I) -> Result<Self, Error>$/;"	f
from_ratio	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    pub fn from_ratio(numerator: u32, denominator: u32) -> Result<Bernoulli, BernoulliError> {$/;"	f
from_rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	f
from_rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	f
from_seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	f
from_seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	f
from_seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn from_seed(seed: [u8; 16]) -> Xoshiro128PlusPlus {$/;"	f
from_seed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn from_seed(seed: [u8; 32]) -> Xoshiro256PlusPlus {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn from_str() {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_hint.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn from_str(input: &str, ignore_case: bool) -> Result<Self, String> {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            fn from_str(s: &str) -> ::std::result::Result<Self,Self::Err> {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    fn from_str(src: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    mod from_str {$/;"	m
from_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    mod from_string {$/;"	m
from_u8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn from_u8(u: u8) -> Option<Vec<Styles>> {$/;"	f
from_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn from_usage(u: &'help str) -> Self {$/;"	f
from_yaml	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn from_yaml(y: &'help Yaml) -> Self {$/;"	f
from_yaml	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn from_yaml(yaml: &'help Yaml) -> Self {$/;"	f
from_yaml	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn from_yaml(y: &'help Yaml) -> Self {$/;"	f
from_yaml	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/lib.rs	/^    pub fn from_yaml(yaml: &yaml_rust::Yaml) -> App {$/;"	f
fromstr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    mod fromstr {$/;"	m
gather_conflicts	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn gather_conflicts(&mut self, cmd: &Command, matcher: &ArgMatcher, arg_id: &Id) -> Vec<Id> {$/;"	f
gather_direct_conflicts	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn gather_direct_conflicts(&mut self, cmd: &Command, arg_id: &Id) -> &[Id] {$/;"	f
gather_requires	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn gather_requires(&mut self, matcher: &ArgMatcher) {$/;"	f
ge_mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn ge_mask(self, other: Self) -> Self::Mask {$/;"	f
ge_mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn ge_mask(self, other: Self) -> Self::Mask;$/;"	f
gen	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen<T>(&mut self) -> T$/;"	f
gen_bool	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen_bool(&mut self, p: f64) -> bool {$/;"	f
gen_index	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^fn gen_index<R: Rng + ?Sized>(rng: &mut R, ubound: usize) -> usize {$/;"	f
gen_range	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen_range<T, R>(&mut self, range: R) -> T$/;"	f
gen_ratio	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen_ratio(&mut self, numerator: u32, denominator: u32) -> bool {$/;"	f
generate	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn generate(&mut self, results: &mut Self::Results) {$/;"	f
get_about	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_about(&self) -> Option<&'help str> {$/;"	f
get_action	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_action(&self) -> &super::ArgAction {$/;"	f
get_after_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_after_help(&self) -> Option<&str> {$/;"	f
get_after_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_after_long_help(&self) -> Option<&str> {$/;"	f
get_all_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_all_aliases(&self) -> Option<Vec<&'help str>> {$/;"	f
get_all_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_all_aliases(&self) -> impl Iterator<Item = &str> + '_ {$/;"	f
get_all_long_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_all_long_flag_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	f
get_all_short_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_all_short_aliases(&self) -> Option<Vec<char>> {$/;"	f
get_all_short_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_all_short_flag_aliases(&self) -> impl Iterator<Item = char> + '_ {$/;"	f
get_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn get_arg(&self, arg: &Id) -> Option<&MatchedArg> {$/;"	f
get_arg_conflicts_with	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_arg_conflicts_with(&self, arg: &Arg) -> Vec<&Arg<'help>> \/\/ FIXME: This could probably have been an iterator$/;"	f
get_args_tag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/usage.rs	/^    fn get_args_tag(&self, incl_reqs: bool) -> Option<String> {$/;"	f
get_arguments	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_arguments(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	f
get_author	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_author(&self) -> Option<&'help str> {$/;"	f
get_before_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_before_help(&self) -> Option<&str> {$/;"	f
get_before_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_before_long_help(&self) -> Option<&str> {$/;"	f
get_bin_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_bin_name(&self) -> Option<&str> {$/;"	f
get_color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_color(&self) -> ColorChoice {$/;"	f
get_context	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn get_context(&self, kind: ContextKind) -> Option<&ContextValue> {$/;"	f
get_count	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn get_count(&self, id: &str) -> u8 {$/;"	f
get_default_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_default_values(&self) -> &[&OsStr] {$/;"	f
get_display_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_display_name(&self) -> Option<&str> {$/;"	f
get_env	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_env(&self) -> Option<&OsStr> {$/;"	f
get_external_subcommand_value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_external_subcommand_value_parser(&self) -> Option<&super::ValueParser> {$/;"	f
get_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn get_flag(&self, id: &str) -> bool {$/;"	f
get_flink_path	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn get_flink_path(&self) -> Option<&PathBuf> {$/;"	f
get_fork_counter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn get_fork_counter() -> usize {$/;"	f
get_global	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_global(&self) -> bool {$/;"	f
get_global_arg_conflicts_with	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn get_global_arg_conflicts_with(&self, arg: &Arg) -> Vec<&Arg<'help>> \/\/ FIXME: This could probably have been an iterator$/;"	f
get_groups	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_groups(&self) -> impl Iterator<Item = &ArgGroup<'help>> {$/;"	f
get_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_help(&self) -> Option<&'help str> {$/;"	f
get_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn get_help(&self) -> Option<&'help str> {$/;"	f
get_help_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^fn get_help_flag(cmd: &Command) -> Option<&'static str> {$/;"	f
get_help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_help_heading(&self) -> Option<&'help str> {$/;"	f
get_help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_help_heading(&self) -> Option<&'help str> {$/;"	f
get_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_id(&self) -> &'help str {$/;"	f
get_index	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_index(&self) -> Option<usize> {$/;"	f
get_long	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_long(&self) -> Option<&'help str> {$/;"	f
get_long_about	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_long_about(&self) -> Option<&'help str> {$/;"	f
get_long_and_visible_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_long_and_visible_aliases(&self) -> Option<Vec<&'help str>> {$/;"	f
get_long_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_long_flag(&self) -> Option<&'help str> {$/;"	f
get_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_long_help(&self) -> Option<&'help str> {$/;"	f
get_long_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_long_version(&self) -> Option<&'help str> {$/;"	f
get_many	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn get_many<T: Any + Clone + Send + Sync + 'static>($/;"	f
get_matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_matches(self) -> ArgMatches {$/;"	f
get_matches_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_matches_from<I, T>(mut self, itr: I) -> ArgMatches$/;"	f
get_matches_from_safe	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_matches_from_safe<I, T>(self, itr: I) -> ClapResult<ArgMatches>$/;"	f
get_matches_from_safe_borrow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_matches_from_safe_borrow<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches>$/;"	f
get_matches_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_matches_mut(&mut self) -> ArgMatches {$/;"	f
get_matches_safe	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_matches_safe(self) -> ClapResult<ArgMatches> {$/;"	f
get_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_name(&self) -> &'help str {$/;"	f
get_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_name(&self) -> &str {$/;"	f
get_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn get_name(&self) -> &'help str {$/;"	f
get_name_and_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn get_name_and_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	f
get_next_help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_next_help_heading(&self) -> Option<&'help str> {$/;"	f
get_num_vals	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_num_vals(&self) -> Option<usize> {$/;"	f
get_one	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn get_one<T: Any + Clone + Send + Sync + 'static>(&self, id: &str) -> Option<&T> {$/;"	f
get_opts	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_opts(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	f
get_os_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn get_os_id(&self) -> &str {$/;"	f
get_positionals	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_positionals(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	f
get_possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_possible_values(&self) -> Option<&[PossibleValue<'help>]> {$/;"	f
get_possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^fn get_possible_values<'help>(a: &Arg<'help>) -> Vec<PossibleValue<'help>> {$/;"	f
get_raw	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn get_raw(&self, id: &str) -> Option<RawValues<'_>> {$/;"	f
get_short	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_short(&self) -> Option<char> {$/;"	f
get_short_and_visible_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_short_and_visible_aliases(&self) -> Option<Vec<char>> {$/;"	f
get_short_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_short_flag(&self) -> Option<char> {$/;"	f
get_stdout	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^    unsafe fn get_stdout() -> io::Result<HANDLE> {$/;"	f
get_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn get_subcommand(&self, id: &Id) -> Option<&SubCommand> {$/;"	f
get_subcommand_help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_subcommand_help_heading(&self) -> Option<&str> {$/;"	f
get_subcommand_value_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_subcommand_value_name(&self) -> Option<&str> {$/;"	f
get_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_subcommands(&self) -> impl Iterator<Item = &App<'help>> {$/;"	f
get_subcommands_containing	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn get_subcommands_containing(&self, arg: &Arg) -> Vec<&App<'help>> {$/;"	f
get_subcommands_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_subcommands_mut(&mut self) -> impl Iterator<Item = &mut App<'help>> {$/;"	f
get_subommand_help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_subommand_help_heading(&self) -> Option<&str> {$/;"	f
get_tmp_dir	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^fn get_tmp_dir() -> Result<PathBuf, ShmemError> {$/;"	f
get_used_global_args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn get_used_global_args(&self, matches: &ArgMatches, global_arg_vec: &mut Vec<Id>) {$/;"	f
get_value_delimiter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_value_delimiter(&self) -> Option<char> {$/;"	f
get_value_hint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_value_hint(&self) -> ValueHint {$/;"	f
get_value_names	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_value_names(&self) -> Option<&[&'help str]> {$/;"	f
get_value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_value_parser(&self) -> &super::ValueParser {$/;"	f
get_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_version(&self) -> Option<&'help str> {$/;"	f
get_visible_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_visible_aliases(&self) -> Option<Vec<&'help str>> {$/;"	f
get_visible_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_visible_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	f
get_visible_long_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_visible_long_flag_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	f
get_visible_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn get_visible_name(&self) -> Option<&'help str> {$/;"	f
get_visible_short_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn get_visible_short_aliases(&self) -> Option<Vec<char>> {$/;"	f
get_visible_short_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn get_visible_short_flag_aliases(&self) -> impl Iterator<Item = char> + '_ {$/;"	f
get_weight	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn get_weight<T>(item: &(u32, T)) -> u32 {$/;"	f
global	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn global(self, yes: bool) -> Self {$/;"	f
global_setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn global_setting(mut self, setting: AppSettings) -> Self {$/;"	f
global_setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/tests.rs	/^fn global_setting() {$/;"	f
global_settings	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn global_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
good	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn good<T: Into<String> + AsRef<[u8]>>(&mut self, msg: T) -> io::Result<()> {$/;"	f
green	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn green(self) -> ColoredString$/;"	f
group	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn group<T: Key>(mut self, group_id: T) -> Self {$/;"	f
group	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn group<G: Into<ArgGroup<'help>>>(mut self, group: G) -> Self {$/;"	f
grouped_values_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn grouped_values_of<T: Key>(&self, id: T) -> Option<GroupedValues> {$/;"	f
groups	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn groups<T: Key>(mut self, group_ids: &[T]) -> Self {$/;"	f
groups	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    fn groups() {$/;"	f
groups	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn groups<I, T>(mut self, groups: I) -> Self$/;"	f
gt_mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn gt_mask(self, other: Self) -> Self::Mask {$/;"	f
gt_mask	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn gt_mask(self, other: Self) -> Self::Mask;$/;"	f
has_colors	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn has_colors(&self) -> bool {$/;"	f
has_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn has_subcommand(name: &str) -> bool {$/;"	f
has_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn has_subcommand(name: &str) -> bool;$/;"	f
has_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn has_subcommands(&self) -> bool {$/;"	f
hash	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/id.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	f
help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn help(mut self, h: impl Into<Option<&'help str>>) -> Self {$/;"	f
help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn help<S: Into<&'help str>>(self, help: S) -> Self {$/;"	f
help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn help(mut self, help: &'help str) -> Self {$/;"	f
help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn help(&mut self, arg: &mut Arg<'help>) {$/;"	f
help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn help($/;"	f
help_err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn help_err(&self, use_long: bool, stream: Stream) -> ClapError {$/;"	f
help_expected	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn help_expected(self, yes: bool) -> Self {$/;"	f
help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn help_heading<O>(mut self, heading: O) -> Self$/;"	f
help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn help_heading<O>(self, heading: O) -> Self$/;"	f
help_message	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn help_message(self, s: impl Into<&'help str>) -> Self {$/;"	f
help_short	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn help_short(self, c: char) -> Self {$/;"	f
help_start	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^fn help_start(b: u8) -> bool {$/;"	f
help_template	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn help_template<S: Into<&'help str>>(mut self, s: S) -> Self {$/;"	f
hidden	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hidden(self, yes: bool) -> Self {$/;"	f
hidden	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn hidden(mut self) -> ColoredString {$/;"	f
hidden	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn hidden(self) -> ColoredString {$/;"	f
hidden	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn hidden(self) -> ColoredString;$/;"	f
hidden_export	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^pub mod hidden_export {$/;"	m
hidden_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hidden_long_help(self, yes: bool) -> Self {$/;"	f
hidden_short_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hidden_short_help(self, yes: bool) -> Self {$/;"	f
hide	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hide(self, yes: bool) -> Self {$/;"	f
hide	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn hide(self, yes: bool) -> Self {$/;"	f
hide	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn hide(mut self, yes: bool) -> Self {$/;"	f
hide_default_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hide_default_value(self, yes: bool) -> Self {$/;"	f
hide_env	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hide_env(self, yes: bool) -> Self {$/;"	f
hide_env_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hide_env_values(self, yes: bool) -> Self {$/;"	f
hide_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hide_long_help(self, yes: bool) -> Self {$/;"	f
hide_possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hide_possible_values(self, yes: bool) -> Self {$/;"	f
hide_possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn hide_possible_values(self, yes: bool) -> Self {$/;"	f
hide_short_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn hide_short_help(self, yes: bool) -> Self {$/;"	f
id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn id<S: Into<&'help str>>(mut self, n: S) -> Self {$/;"	f
id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn id<S: Into<&'help str>>(mut self, n: S) -> Self {$/;"	f
ignore_case	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn ignore_case(self, yes: bool) -> Self {$/;"	f
ignore_errors	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn ignore_errors(self, yes: bool) -> Self {$/;"	f
impl_fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^macro_rules! impl_fill {$/;"	d
impl_fill_arrays	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^macro_rules! impl_fill_arrays {$/;"	d
impl_fill_each	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^macro_rules! impl_fill_each {$/;"	d
impl_int_from_uint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^macro_rules! impl_int_from_uint {$/;"	d
impl_nzint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^macro_rules! impl_nzint {$/;"	d
impl_settings	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! impl_settings {$/;"	d
impl_weight	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^    macro_rules! impl_weight {$/;"	d
index	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn index(mut self, idx: usize) -> Self {$/;"	f
index	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn index(&self, key: &Id) -> &Self::Output {$/;"	f
index	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/mkeymap.rs	/^    fn index(&self, key: &KeyType) -> &Self::Output {$/;"	f
index	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn index(&self, index: usize) -> usize {$/;"	f
index_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn index_of<T: Key>(&self, id: T) -> Option<usize> {$/;"	f
indices_exact_size	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn indices_exact_size() {$/;"	f
indices_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn indices_of<T: Key>(&self, id: T) -> Option<Indices<'_>> {$/;"	f
infer_long_args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn infer_long_args(self, yes: bool) -> Self {$/;"	f
infer_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn infer_subcommands(self, yes: bool) -> Self {$/;"	f
info	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! info { ($($x:tt)*) => ($/;"	d
info	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^            macro_rules! info (($($tt:tt)*) => {{}});$/;"	d
init_os_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/unix/mod.rs	/^pub unsafe fn init_os_handler() -> Result<(), Error> {$/;"	f
init_os_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/windows/mod.rs	/^pub unsafe fn init_os_handler() -> Result<(), Error> {$/;"	f
into_app	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn into_app<'help>() -> Command<'help> {$/;"	f
into_app	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn into_app<'help>() -> Command<'help>;$/;"	f
into_app_for_update	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn into_app_for_update<'help>() -> Command<'help> {$/;"	f
into_app_for_update	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn into_app_for_update<'help>() -> Command<'help>;$/;"	f
into_float_with_exponent	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^            fn into_float_with_exponent(self, exponent: i32) -> $ty {$/;"	f
into_float_with_exponent	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    fn into_float_with_exponent(self, exponent: i32) -> Self::F;$/;"	f
into_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn into_iter(self) -> IndexVecIntoIter {$/;"	f
into_vec	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn into_vec(self) -> Vec<usize> {$/;"	f
is_a_tty	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/fmt.rs	/^fn is_a_tty(stream: Stream) -> bool {$/;"	f
is_allow_external_subcommands_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_allow_external_subcommands_set(&self) -> bool {$/;"	f
is_allow_hyphen_values_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_allow_hyphen_values_set(&self) -> bool {$/;"	f
is_allow_invalid_utf8_for_external_subcommands_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_allow_invalid_utf8_for_external_subcommands_set(&self) -> bool {$/;"	f
is_allow_invalid_utf8_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_allow_invalid_utf8_set(&self) -> bool {$/;"	f
is_allow_missing_positional_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_allow_missing_positional_set(&self) -> bool {$/;"	f
is_allow_negative_numbers_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_allow_negative_numbers_set(&self) -> bool {$/;"	f
is_arg_required_else_help_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_arg_required_else_help_set(&self) -> bool {$/;"	f
is_args_conflicts_with_subcommands_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_args_conflicts_with_subcommands_set(&self) -> bool {$/;"	f
is_disable_colored_help_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_disable_colored_help_set(&self) -> bool {$/;"	f
is_disable_help_flag_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_disable_help_flag_set(&self) -> bool {$/;"	f
is_disable_help_subcommand_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_disable_help_subcommand_set(&self) -> bool {$/;"	f
is_disable_version_flag_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_disable_version_flag_set(&self) -> bool {$/;"	f
is_dont_collapse_args_in_usage_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_dont_collapse_args_in_usage_set(&self) -> bool {$/;"	f
is_dont_delimit_trailing_values_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_dont_delimit_trailing_values_set(&self) -> bool {$/;"	f
is_empty	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn is_empty(&self) -> bool;$/;"	f
is_empty	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_exclusive_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_exclusive_set(&self) -> bool {$/;"	f
is_finite	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn is_finite(self) -> bool {$/;"	f
is_finite	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn is_finite(self) -> bool;$/;"	f
is_forbid_empty_values_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_forbid_empty_values_set(&self) -> bool {$/;"	f
is_forked	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn is_forked(&self, global_fork_counter: usize) -> bool {$/;"	f
is_global_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_global_set(&self) -> bool {$/;"	f
is_hidden	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn is_hidden(&self) -> bool {$/;"	f
is_hide_default_value_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_hide_default_value_set(&self) -> bool {$/;"	f
is_hide_env_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_hide_env_set(&self) -> bool {$/;"	f
is_hide_env_values_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_hide_env_values_set(&self) -> bool {$/;"	f
is_hide_long_help_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_hide_long_help_set(&self) -> bool {$/;"	f
is_hide_possible_values_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_hide_possible_values_set(&self) -> bool {$/;"	f
is_hide_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	f
is_hide_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	f
is_hide_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	f
is_hide_short_help_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_hide_short_help_set(&self) -> bool {$/;"	f
is_ignore_case_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_ignore_case_set(&self) -> bool {$/;"	f
is_infinite	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn is_infinite(self) -> bool {$/;"	f
is_infinite	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn is_infinite(self) -> bool;$/;"	f
is_last_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_last_set(&self) -> bool {$/;"	f
is_missing_required_ok	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn is_missing_required_ok($/;"	f
is_multicall_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_multicall_set(&self) -> bool {$/;"	f
is_multiple_occurrences_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_multiple_occurrences_set(&self) -> bool {$/;"	f
is_multiple_values_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_multiple_values_set(&self) -> bool {$/;"	f
is_nan	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn is_nan(self) -> bool {$/;"	f
is_nan	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn is_nan(self) -> bool;$/;"	f
is_new_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn is_new_arg(&self, next: &clap_lex::ParsedArg<'_>, current_positional: &Arg) -> bool {$/;"	f
is_next_line_help_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_next_line_help_set(&self) -> bool {$/;"	f
is_next_line_help_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_next_line_help_set(&self) -> bool {$/;"	f
is_no_binary_name_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_no_binary_name_set(&self) -> bool {$/;"	f
is_owner	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn is_owner(&self) -> bool {$/;"	f
is_plain	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn is_plain(&self) -> bool {$/;"	f
is_positional	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_positional(&self) -> bool {$/;"	f
is_present	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn is_present<T: Key>(&self, id: T) -> bool {$/;"	f
is_propagate_version_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_propagate_version_set(&self) -> bool {$/;"	f
is_require_equals_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_require_equals_set(&self) -> bool {$/;"	f
is_require_value_delimiter_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_require_value_delimiter_set(&self) -> bool {$/;"	f
is_required_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_required_set(&self) -> bool {$/;"	f
is_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	f
is_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_set(&self, s: AppSettings) -> bool {$/;"	f
is_subcommand_negates_reqs_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_subcommand_negates_reqs_set(&self) -> bool {$/;"	f
is_subcommand_precedence_over_arg_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_subcommand_precedence_over_arg_set(&self) -> bool {$/;"	f
is_subcommand_required_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_subcommand_required_set(&self) -> bool {$/;"	f
is_takes_value_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_takes_value_set(&self) -> bool {$/;"	f
is_trailing_var_arg_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn is_trailing_var_arg_set(&self) -> bool {$/;"	f
is_use_value_delimiter_set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn is_use_value_delimiter_set(&self) -> bool {$/;"	f
is_valid_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn is_valid_arg(&self, _id: impl Key) -> bool {$/;"	f
is_valid_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn is_valid_subcommand(&self, _id: impl Key) -> bool {$/;"	f
issue_2090	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/tests.rs	/^fn issue_2090() {$/;"	f
issue_665	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn issue_665() {$/;"	f
it_works	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn it_works() {$/;"	f
italic	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn italic(mut self) -> ColoredString {$/;"	f
italic	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn italic(self) -> ColoredString {$/;"	f
italic	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn italic(self) -> ColoredString;$/;"	f
iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn iter(&self) -> IndexVecIter<'_> {$/;"	f
key	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/fnv.rs	/^    fn key(&self) -> u64 {$/;"	f
key	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/fnv.rs	/^    fn key(&self) -> u64;$/;"	f
kind	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn kind(&self) -> ErrorKind {$/;"	f
lanes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn lanes() -> usize {$/;"	f
last	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn last(self, yes: bool) -> Self {$/;"	f
len	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn len(&self) -> usize {$/;"	f
load_yaml	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! load_yaml {$/;"	d
log	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^        mod log {$/;"	m
long	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn long(mut self, l: &'help str) -> Self {$/;"	f
long	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn long(&mut self, arg: &mut Arg<'help>) {$/;"	f
long	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn long(&mut self, arg: &Arg<'help>) -> io::Result<()> {$/;"	f
long_about	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn long_about<O: Into<Option<&'help str>>>(mut self, long_about: O) -> Self {$/;"	f
long_end	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^fn long_end(b: u8) -> bool {$/;"	f
long_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn long_flag(mut self, long: &'help str) -> Self {$/;"	f
long_flag_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn long_flag_alias(mut self, name: &'help str) -> Self {$/;"	f
long_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn long_flag_aliases(mut self, names: &[&'help str]) -> Self {$/;"	f
long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn long_help(mut self, h: impl Into<Option<&'help str>>) -> Self {$/;"	f
long_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn long_version<S: Into<&'help str>>(mut self, ver: S) -> Self {$/;"	f
magenta	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn magenta(self) -> ColoredString$/;"	f
main	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/bin/stdio-fixture.rs	/^fn main() {$/;"	f
main	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^fn main() {$/;"	f
main	/home/tgunter/Rust/notes/src/main.rs	/^fn main() {$/;"	f
make_test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^        macro_rules! make_test {$/;"	d
map	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn map<T, F>(self, func: F) -> MapValueParser<Self, F>$/;"	f
map	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn map<F, S>(self, func: F) -> DistMap<Self, F, T, S>$/;"	f
match_arg_error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn match_arg_error($/;"	f
matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn matches(&self, value: &str, ignore_case: bool) -> bool {$/;"	f
max_occurrences	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn max_occurrences(mut self, qty: usize) -> Self {$/;"	f
max_term_width	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn max_term_width(mut self, w: usize) -> Self {$/;"	f
max_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn max_values(mut self, qty: usize) -> Self {$/;"	f
min_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn min_values(mut self, qty: usize) -> Self {$/;"	f
missing_required_error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn missing_required_error(&self, matcher: &ArgMatcher, incl: Vec<Id>) -> ClapResult<()> {$/;"	f
move_last	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn move_last(slice: &mut [usize], pos: usize) {$/;"	f
multicall	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn multicall(self, yes: bool) -> Self {$/;"	f
multiple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn multiple(self, yes: bool) -> Self {$/;"	f
multiple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn multiple(mut self, yes: bool) -> Self {$/;"	f
multiple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn multiple(&mut self, arg: &mut Arg) {$/;"	f
multiple_occurrences	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn multiple_occurrences(self, yes: bool) -> Self {$/;"	f
multiple_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn multiple_values(self, yes: bool) -> Self {$/;"	f
mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/unix/mod.rs	/^static mut PIPE: (RawFd, RawFd) = (-1, -1);$/;"	c
mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/windows/mod.rs	/^static mut SEMAPHORE: HANDLE = 0 as HANDLE;$/;"	c
mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^    static mut OLD_OUT: *mut Output = 0 as *mut Output;$/;"	c
mut	/home/tgunter/Rust/notes/src/main.rs	/^static mut QUIT : bool = false; \/\/TODO should be an atomic$/;"	c
mut_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn mut_arg<T, F>(mut self, arg_id: T, f: F) -> Self$/;"	f
mut_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn mut_subcommand<'a, T, F>(mut self, subcmd_id: T, f: F) -> Self$/;"	f
name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn name<S: Into<&'help str>>(self, n: S) -> Self {$/;"	f
name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn name<S: Into<&'help str>>(self, n: S) -> Self {$/;"	f
name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn name<S: Into<String>>(mut self, name: S) -> Self {$/;"	f
name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn name(&mut self, arg: &mut Arg<'help>) {$/;"	f
name_end	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^fn name_end(b: u8) -> bool {$/;"	f
needs_options_tag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/usage.rs	/^    fn needs_options_tag(&self) -> bool {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn new<S: Into<&'help str>>(n: S) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn new<S: Into<&'help str>>(n: S) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn new<S: Into<String>>(name: S) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/possible_value.rs	/^    pub fn new(name: &'help str) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn new(usage: &'help str) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn new(parser: P, func: F) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub fn new(values: impl Into<PossibleValuesParser>) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub fn new<P>(other: P) -> Self$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn new() -> Option<Self> {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn new(kind: ErrorKind) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn new() -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/graph.rs	/^    fn new(id: T) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^        fn new() -> io::Result<Output> {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    pub fn new(p: f64) -> Result<Bernoulli, BernoulliError> {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    pub fn new(slice: &'a [T]) -> Result<Self, EmptySlice> {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn new<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    pub fn new<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^        pub fn new(_weights: Vec<W>) -> Result<Self, WeightedError> {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    pub fn new<I>(weights: I) -> Result<WeightedIndex<X>, WeightedError>$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    pub fn new(r: R) -> ReadRng<R> {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    pub fn new(initial: u64, increment: u64) -> Self {$/;"	f
new	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn new() -> Self {$/;"	f
new_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn new_inclusive<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    pub fn new_inclusive<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	f
new_inner	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^        fn new_inner<'help>(name: String) -> App<'help> {$/;"	f
new_map	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^fn new_map($/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a OsStr> {$/;"	f
next_back	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a str> {$/;"	f
next_back	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	f
next_display_order	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn next_display_order(mut self, disp_ord: impl Into<Option<usize>>) -> Self {$/;"	f
next_help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn next_help_heading<O>(mut self, heading: O) -> Self$/;"	f
next_index	/home/tgunter/Rust/notes/src/main.rs	/^    fn next_index(&self, index: usize, it: char){$/;"	f
next_line_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn next_line_help(self, yes: bool) -> Self {$/;"	f
next_line_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn next_line_help(self, yes: bool) -> Self {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
no_binary_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn no_binary_name(self, yes: bool) -> Self {$/;"	f
nonascii	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn nonascii() {$/;"	f
none	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn none<T: Into<String> + AsRef<[u8]>>(&mut self, msg: T) -> io::Result<()> {$/;"	f
none	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn none(self) -> bool {$/;"	f
none	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn none(self) -> bool;$/;"	f
normal	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn normal(self) -> ColoredString {$/;"	f
normal	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn normal(self) -> ColoredString;$/;"	f
normalize_env	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn normalize_env(env_res: Result<String, env::VarError>) -> Option<bool> {$/;"	f
number_of_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn number_of_values(mut self, qty: usize) -> Self {$/;"	f
occurrences_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn occurrences_of<T: Key>(&self, id: T) -> u64 {$/;"	f
on_black	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_black(self) -> ColoredString$/;"	f
on_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_blue(self) -> ColoredString$/;"	f
on_bright_black	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_black(self) -> ColoredString$/;"	f
on_bright_blue	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_blue(self) -> ColoredString$/;"	f
on_bright_color_fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_color_fn() {$/;"	f
on_bright_cyan	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_cyan(self) -> ColoredString$/;"	f
on_bright_green	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_green(self) -> ColoredString$/;"	f
on_bright_magenta	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_magenta(self) -> ColoredString$/;"	f
on_bright_purple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_purple(self) -> ColoredString$/;"	f
on_bright_red	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_red(self) -> ColoredString$/;"	f
on_bright_white	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_white(self) -> ColoredString$/;"	f
on_bright_yellow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_yellow(self) -> ColoredString$/;"	f
on_color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color<S: Into<Color>>(mut self, color: S) -> ColoredString {$/;"	f
on_color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color<S: Into<Color>>(self, color: S) -> ColoredString {$/;"	f
on_color	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color<S: Into<Color>>(self, color: S) -> ColoredString;$/;"	f
on_color_fn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color_fn() {$/;"	f
on_cyan	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_cyan(self) -> ColoredString$/;"	f
on_green	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_green(self) -> ColoredString$/;"	f
on_magenta	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_magenta(self) -> ColoredString$/;"	f
on_purple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_purple(self) -> ColoredString$/;"	f
on_red	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_red(self) -> ColoredString$/;"	f
on_truecolor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_truecolor(self, r: u8, g: u8, b: u8) -> ColoredString$/;"	f
on_white	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_white(self) -> ColoredString$/;"	f
on_yellow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_yellow(self) -> ColoredString$/;"	f
one	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn one() -> Self {$/;"	f
one	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn one() -> Self;$/;"	f
open	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn open(mut self) -> Result<Shmem, ShmemError> {$/;"	f
open_mapping	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/unix.rs	/^pub fn open_mapping($/;"	f
open_mapping	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^pub fn open_mapping($/;"	f
option_display2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display2() {$/;"	f
option_display3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display3() {$/;"	f
option_display_multiple_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display_multiple_aliases() {$/;"	f
option_display_multiple_occurrences	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display_multiple_occurrences() {$/;"	f
option_display_multiple_short_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display_multiple_short_aliases() {$/;"	f
option_display_multiple_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display_multiple_values() {$/;"	f
option_display_single_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display_single_alias() {$/;"	f
option_display_single_short_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn option_display_single_short_alias() {$/;"	f
os_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/unix/mod.rs	/^extern "C" fn os_handler(_: nix::libc::c_int) {$/;"	f
os_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn os_id<S: AsRef<str>>(mut self, os_id: S) -> Self {$/;"	f
os_values_exact_size	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn os_values_exact_size() {$/;"	f
override_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn override_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	f
override_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn override_usage<S: Into<&'help str>>(mut self, usage: S) -> Self {$/;"	f
overrides_with	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn overrides_with<T: Key>(mut self, arg_id: T) -> Self {$/;"	f
overrides_with_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn overrides_with_all<T: Key>(mut self, names: &[T]) -> Self {$/;"	f
parse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        fn parse(_: &str) -> Result<usize, std::io::Error> {$/;"	f
parse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn parse($/;"	f
parse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn parse() -> Self {$/;"	f
parse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^        fn parse() {$/;"	f
parse_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn parse_from<I, It>(itr: I) -> Self$/;"	f
parse_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn parse_from<I, T>(itr: I) -> Self$/;"	f
parse_help_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn parse_help_subcommand($/;"	f
parse_long_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn parse_long_arg($/;"	f
parse_opt_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn parse_opt_value($/;"	f
parse_ref	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn parse_ref($/;"	f
parse_short_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn parse_short_arg($/;"	f
parse_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn parse_subcommand($/;"	f
partial_cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/debug_asserts.rs	/^    fn partial_cmp(&self, other: &Flag) -> Option<Ordering> {$/;"	f
partial_cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	f
partial_cmp	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        fn partial_cmp(&self, other: &Self) -> Option<core::cmp::Ordering> {$/;"	f
partial_shuffle	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn partial_shuffle<R>($/;"	f
pipe2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/platform/unix/mod.rs	/^fn pipe2(flags: nix::fcntl::OFlag) -> nix::Result<(RawFd, RawFd)> {$/;"	f
platform	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^mod platform {$/;"	m
pos_help_double_lit_single_quote	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_help_double_lit_single_quote() {$/;"	f
pos_help_lit_single_quote	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_help_lit_single_quote() {$/;"	f
pos_help_newline	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_help_newline() {$/;"	f
pos_help_newline_lit_sq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_help_newline_lit_sq() {$/;"	f
pos_mult	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_mult() {$/;"	f
pos_mult_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_mult_help() {$/;"	f
pos_req	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_req() {$/;"	f
pos_req_mult_def_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_req_mult_def_help() {$/;"	f
pos_req_mult_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn pos_req_mult_help() {$/;"	f
positional_display_multiple_occurrences	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn positional_display_multiple_occurrences() {$/;"	f
positional_display_multiple_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn positional_display_multiple_values() {$/;"	f
positional_display_required	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn positional_display_required() {$/;"	f
positional_display_val_names	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn positional_display_val_names() {$/;"	f
positional_display_val_names_req	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    fn positional_display_val_names_req() {$/;"	f
possible_long_flag_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn possible_long_flag_subcommand(&self, arg: &str) -> Option<&str> {$/;"	f
possible_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn possible_subcommand($/;"	f
possible_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn possible_value<T>(mut self, value: T) -> Self$/;"	f
possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn possible_values<I, T>(mut self, values: I) -> Self$/;"	f
possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn possible_values($/;"	f
possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn possible_values() -> impl Iterator<Item = crate::PossibleValue<'static>> {$/;"	f
possible_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub fn possible_values($/;"	f
possible_values_match	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/features/suggestions.rs	/^    fn possible_values_match() {$/;"	f
possible_values_nomatch	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/features/suggestions.rs	/^    fn possible_values_nomatch() {$/;"	f
precomputed_hashes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/id.rs	/^macro_rules! precomputed_hashes {$/;"	d
print	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn print(&self) -> io::Result<()> {$/;"	f
print	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^    pub unsafe fn print(fmt: ::std::fmt::Arguments) {$/;"	f
print_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn print_help(&mut self) -> io::Result<()> {$/;"	f
print_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn print_long_help(&mut self) -> io::Result<()> {$/;"	f
private	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^mod private {$/;"	m
propagate_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn propagate_version(self, yes: bool) -> Self {$/;"	f
propagate_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/tests.rs	/^fn propagate_version() {$/;"	f
purple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn purple(self) -> ColoredString$/;"	f
push_arg_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn push_arg_values($/;"	f
put_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^fn put_usage(c: &mut Colorizer, usage: impl Into<String>) {$/;"	f
quote	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^fn quote(s: impl AsRef<str>) -> String {$/;"	f
raise_ctrl_c	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^    pub unsafe fn raise_ctrl_c() {$/;"	f
random	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^pub fn random<T>() -> T$/;"	f
range	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub fn range<B: RangeBounds<i64>>(mut self, range: B) -> Self {$/;"	f
range	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub fn range<B: RangeBounds<u64>>(mut self, range: B) -> Self {$/;"	f
range	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        fn range<T: SampleUniform>(low: T, high: T) {$/;"	f
raw	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn raw(self, yes: bool) -> Self {$/;"	f
raw	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn raw(kind: ErrorKind, message: impl std::fmt::Display) -> Self {$/;"	f
react	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn react($/;"	f
red	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn red(self) -> ColoredString$/;"	f
ref	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub static ref SHOULD_COLORIZE: ShouldColorize = ShouldColorize::from_env();$/;"	c
reference	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn reference() {$/;"	f
reference	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn reference() {$/;"	f
register_fork_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {$/;"	f
register_fork_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {}$/;"	f
remove_many	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn remove_many<T: Any + Clone + Send + Sync + 'static>($/;"	f
remove_one	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn remove_one<T: Any + Clone + Send + Sync + 'static>(&mut self, id: &str) -> Option<T> {$/;"	f
remove_overrides	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn remove_overrides(&self, arg: &Arg<'help>, matcher: &mut ArgMatcher) {$/;"	f
remove_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn remove_subcommand(&mut self) -> Option<(String, ArgMatches)> {$/;"	f
render_long_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn render_long_version(&self) -> String {$/;"	f
render_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn render_usage(&mut self) -> String {$/;"	f
render_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn render_version(&self) -> String {$/;"	f
replace	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn replace(mut self, name: &'help str, target: &'help [&'help str]) -> Self {$/;"	f
replace	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn replace(self, index: usize, new_value: Self) -> Self {$/;"	f
require_delimiter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn require_delimiter(self, yes: bool) -> Self {$/;"	f
require_equals	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn require_equals(self, yes: bool) -> Self {$/;"	f
require_value_delimiter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn require_value_delimiter(self, yes: bool) -> Self {$/;"	f
required	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required(self, yes: bool) -> Self {$/;"	f
required	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn required(mut self, yes: bool) -> Self {$/;"	f
required_if	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_if<T: Key>(self, arg_id: T, val: &'help str) -> Self {$/;"	f
required_if_eq	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_if_eq<T: Key>(mut self, arg_id: T, val: &'help str) -> Self {$/;"	f
required_if_eq_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_if_eq_all<T: Key>(mut self, ifs: &[(T, &'help str)]) -> Self {$/;"	f
required_if_eq_any	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_if_eq_any<T: Key>(mut self, ifs: &[(T, &'help str)]) -> Self {$/;"	f
required_ifs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_ifs<T: Key>(self, ifs: &[(T, &'help str)]) -> Self {$/;"	f
required_unless	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_unless<T: Key>(self, arg_id: T) -> Self {$/;"	f
required_unless_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_unless_all<T, I>(self, names: I) -> Self$/;"	f
required_unless_one	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_unless_one<T, I>(self, names: I) -> Self$/;"	f
required_unless_present	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_unless_present<T: Key>(mut self, arg_id: T) -> Self {$/;"	f
required_unless_present_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_unless_present_all<T, I>(mut self, names: I) -> Self$/;"	f
required_unless_present_any	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn required_unless_present_any<T, I>(mut self, names: I) -> Self$/;"	f
requires	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn requires<T: Key>(mut self, arg_id: T) -> Self {$/;"	f
requires	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn requires<T: Key>(mut self, id: T) -> Self {$/;"	f
requires_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn requires_all<T: Key>(mut self, names: &[T]) -> Self {$/;"	f
requires_all	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn requires_all(mut self, ns: &[&'help str]) -> Self {$/;"	f
requires_if	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn requires_if<T: Key>(mut self, val: &'help str, arg_id: T) -> Self {$/;"	f
requires_ifs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn requires_ifs<T: Key>(mut self, ifs: &[(&'help str, T)]) -> Self {$/;"	f
reseed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed_and_generate	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn reseed_and_generate($/;"	f
resolve_clicolor_force	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn resolve_clicolor_force($/;"	f
resolve_pending	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn resolve_pending(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	f
reverse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reverse(self) -> ColoredString {$/;"	f
reverse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reverse(self) -> ColoredString;$/;"	f
reversed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reversed(mut self) -> ColoredString {$/;"	f
reversed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reversed(self) -> ColoredString {$/;"	f
reversed	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reversed(self) -> ColoredString;$/;"	f
rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^    pub fn rng(seed: u64) -> impl RngCore {$/;"	f
run_tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^macro_rules! run_tests {$/;"	d
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> S {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T;$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> $ty {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> $intrinsic {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> $ty {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u128 {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u16 {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u32 {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u64 {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u8 {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^            fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> ( $( $tyvar ),* , ) {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^            fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> [T; $n] { [] }$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^            fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> [T; $n] {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, _: &mut R) -> () {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> [T; N] {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Option<T> {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Wrapping<T> {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> char {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u8 {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    fn sample<R: crate::Rng + ?Sized>(&self, rng: &mut R) -> &'a T {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Duration {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X;$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> X {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn sample<T, D: Distribution<T>>(&mut self, distr: D) -> T {$/;"	f
sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub fn sample<R>(rng: &mut R, length: usize, amount: usize) -> IndexVec$/;"	f
sample_efraimidis_spirakis	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_efraimidis_spirakis<R, F, X, N>($/;"	f
sample_floyd	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_floyd<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_inplace	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_inplace<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample_iter<R>(self, rng: R) -> DistIter<Self, R, T>$/;"	f
sample_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn sample_iter<T, D>(self, distr: D) -> distributions::DistIter<D, Self, T>$/;"	f
sample_rejection	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_rejection<X: UInt, R>(rng: &mut R, length: X, amount: X) -> IndexVec$/;"	f
sample_single	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn sample_single<R: Rng + ?Sized, B1, B2>(low_b: B1, high_b: B2, rng: &mut R) -> Self::X$/;"	f
sample_single	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single<R: Rng + ?Sized, B1, B2>(low: B1, high: B2, rng: &mut R) -> Self::X$/;"	f
sample_single	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single<R: RngCore + ?Sized>(self, rng: &mut R) -> T {$/;"	f
sample_single	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single<R: RngCore + ?Sized>(self, rng: &mut R) -> T;$/;"	f
sample_single_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn sample_single_inclusive<R: Rng + ?Sized, B1, B2>(low_b: B1, high_b: B2, rng: &mut R) -> Self::X$/;"	f
sample_single_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single_inclusive<R: Rng + ?Sized, B1, B2>(low: B1, high: B2, rng: &mut R)$/;"	f
sample_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample_string<R: Rng + ?Sized>(&self, rng: &mut R, len: usize) -> String {$/;"	f
sample_weighted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub fn sample_weighted<R, F, X>($/;"	f
sc_spec_vals	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn sc_spec_vals(&self, a: &Command) -> String {$/;"	f
scalar_float_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! scalar_float_impl {$/;"	d
seed_from_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn seed_from_u64(mut state: u64) -> Self {$/;"	f
seed_from_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn seed_from_u64(mut state: u64) -> Self {$/;"	f
set	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn set(self, s: ArgSettings) -> Self {$/;"	f
set_as_std	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^        unsafe fn set_as_std(self) -> io::Result<()> {$/;"	f
set_bin_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn set_bin_name<S: Into<String>>(&mut self, name: S) {$/;"	f
set_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/lib.rs	/^pub fn set_handler<F>(mut user_handler: F) -> Result<(), Error>$/;"	f
set_override	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn set_override(&self, override_colorize: bool) {$/;"	f
set_override	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub fn set_override(override_colorize: bool) {$/;"	f
set_owner	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn set_owner(&mut self, is_owner: bool) -> bool {$/;"	f
set_owner	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/unix.rs	/^    pub fn set_owner(&mut self, is_owner: bool) -> bool {$/;"	f
set_owner	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/windows.rs	/^    pub fn set_owner(&mut self, is_owner: bool) -> bool {$/;"	f
set_term_width	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn set_term_width(self, width: usize) -> Self {$/;"	f
set_virtual_terminal	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub fn set_virtual_terminal(use_virtual: bool) -> Result<(), ()> {$/;"	f
setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn setting<F>(mut self, setting: F) -> Self$/;"	f
setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn setting<F>(mut self, setting: F) -> Self$/;"	f
settings	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
setup	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^    pub unsafe fn setup() -> io::Result<()> {$/;"	f
short	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn short(mut self, s: char) -> Self {$/;"	f
short	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn short(&mut self, arg: &mut Arg<'help>) {$/;"	f
short	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn short(&mut self, arg: &Arg<'help>) -> io::Result<()> {$/;"	f
short_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn short_alias(mut self, name: char) -> Self {$/;"	f
short_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn short_aliases(mut self, names: &[char]) -> Self {$/;"	f
short_flag	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn short_flag(mut self, short: char) -> Self {$/;"	f
short_flag_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn short_flag_alias(mut self, name: char) -> Self {$/;"	f
short_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn short_flag_aliases(mut self, names: &[char]) -> Self {$/;"	f
short_or_long	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn short_or_long(&mut self, arg: &mut Arg<'help>) {$/;"	f
should_colorize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn should_colorize(&self) -> bool {$/;"	f
should_show_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^fn should_show_arg(use_long: bool, arg: &Arg) -> bool {$/;"	f
should_show_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^fn should_show_subcommand(subcommand: &Command) -> bool {$/;"	f
shuffle	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn shuffle<R>(&mut self, rng: &mut R)$/;"	f
simd_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^macro_rules! simd_impl {$/;"	d
simd_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! simd_impl {$/;"	d
simd_wmul	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^mod simd_wmul {$/;"	m
singular_or_plural	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn singular_or_plural(n: usize) -> &'static str {$/;"	f
six	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn six() {$/;"	f
size	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^    pub fn size(mut self, size: usize) -> Self {$/;"	f
size_hint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
source	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
source	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	f
source	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/error.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	f
spaces	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn spaces(&mut self, n: usize) -> io::Result<()> {$/;"	f
spec_vals	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn spec_vals(&self, a: &Arg) -> String {$/;"	f
specs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^mod specs {$/;"	m
splat	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn splat(scalar: Self) -> Self {$/;"	f
split_arg_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn split_arg_values($/;"	f
start_custom_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn start_custom_arg(&self, matcher: &mut ArgMatcher, arg: &Arg<'help>, source: ValueSource) {$/;"	f
start_error	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^fn start_error(c: &mut Colorizer) {$/;"	f
start_occurrence_of_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn start_occurrence_of_arg(&self, matcher: &mut ArgMatcher, arg: &Arg<'help>) {$/;"	f
stop_at	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn stop_at<F>(&mut self, f: F)$/;"	f
strikethrough	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn strikethrough(mut self) -> ColoredString {$/;"	f
strikethrough	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn strikethrough(self) -> ColoredString {$/;"	f
strikethrough	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn strikethrough(self) -> ColoredString;$/;"	f
style	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn style(&self) -> style::Style {$/;"	f
style_from_multiples	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn style_from_multiples(styles: &[Styles]) -> Style {$/;"	f
styles_combine_complex	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    mod styles_combine_complex {$/;"	m
subcmd	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn subcmd(&mut self, sc_str: &str, next_line_help: bool, longest: usize) -> io::Result<()> {$/;"	f
subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn subcommand<S: Into<App<'help>>>(mut self, subcmd: S) -> Self {$/;"	f
subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn subcommand(&self) -> Option<(&str, &ArgMatches)> {$/;"	f
subcommand_help_heading	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn subcommand_help_heading<T>(mut self, heading: T) -> Self$/;"	f
subcommand_matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn subcommand_matches<T: Key>(&self, id: T) -> Option<&ArgMatches> {$/;"	f
subcommand_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	f
subcommand_negates_reqs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn subcommand_negates_reqs(self, yes: bool) -> Self {$/;"	f
subcommand_next_line_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn subcommand_next_line_help($/;"	f
subcommand_precedence_over_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn subcommand_precedence_over_arg(self, yes: bool) -> Self {$/;"	f
subcommand_required	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn subcommand_required(self, yes: bool) -> Self {$/;"	f
subcommand_value_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn subcommand_value_name<S>(mut self, value_name: S) -> Self$/;"	f
subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn subcommands<I, T>(mut self, subcmds: I) -> Self$/;"	f
t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	d
tags	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^        macro_rules! tags {$/;"	d
takes_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn takes_value(self, yes: bool) -> Self {$/;"	f
takes_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/action.rs	/^    pub fn takes_values(&self) -> bool {$/;"	f
template	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn template<S: Into<&'help str>>(self, s: S) -> Self {$/;"	f
ten_dice_rolls_other_than_five	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^        fn ten_dice_rolls_other_than_five<R: Rng>($/;"	f
term_width	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn term_width(mut self, width: usize) -> Self {$/;"	f
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/app_settings.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_settings.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/features/suggestions.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/any_value.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^mod test {$/;"	m
test	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^mod test {$/;"	m
test_accepting_nan	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_accepting_nan(){$/;"	f
test_aggreg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        macro_rules! test_aggreg {$/;"	d
test_alphanumeric	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn test_alphanumeric() {$/;"	f
test_average	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn test_average() {$/;"	f
test_char	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_char() {$/;"	f
test_chars	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn test_chars() {$/;"	f
test_clone_reseeding	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn test_clone_reseeding() {$/;"	f
test_combine	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        macro_rules! test_combine {$/;"	d
test_custom_uniform	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_custom_uniform() {$/;"	f
test_default_indices	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn test_default_indices() {$/;"	f
test_default_indices_with_shorter_lifetime	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn test_default_indices_with_shorter_lifetime() {$/;"	f
test_default_osvalues	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn test_default_osvalues() {$/;"	f
test_default_raw_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn test_default_raw_values() {$/;"	f
test_default_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn test_default_values() {$/;"	f
test_dist_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_dist_string() {$/;"	f
test_distributions_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_distributions_iter() {$/;"	f
test_distributions_map	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_distributions_map() {$/;"	f
test_durations	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_durations() {$/;"	f
test_f32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    macro_rules! test_f32 {$/;"	d
test_f64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    macro_rules! test_f64 {$/;"	d
test_fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_fill() {$/;"	f
test_fill_bytes_default	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_fill_bytes_default() {$/;"	f
test_fill_empty	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_fill_empty() {$/;"	f
test_float_assertions	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_float_assertions() {$/;"	f
test_float_overflow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_float_overflow() {$/;"	f
test_float_overflow_single	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_float_overflow_single() {$/;"	f
test_floats	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_floats() {$/;"	f
test_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    fn test_from() {$/;"	f
test_gen_bool	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_bool() {$/;"	f
test_gen_range_float	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_float() {$/;"	f
test_gen_range_int	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_int() {$/;"	f
test_gen_range_panic_int	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_panic_int() {$/;"	f
test_gen_range_panic_usize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_panic_usize() {$/;"	f
test_gen_ratio_average	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_ratio_average() {$/;"	f
test_grouped_vals_first	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/matched_arg.rs	/^    fn test_grouped_vals_first() {$/;"	f
test_integers	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn test_integers() {$/;"	f
test_integers	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_integers() {$/;"	f
test_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn test_iter(iter: impl Iterator<Item = usize> + Clone) -> [i32; 9] {$/;"	f
test_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn test_iter<R: Rng + ?Sized, Iter: Iterator<Item = usize> + Clone>(r: &mut R, iter: Iter) {$/;"	f
test_iterator_choose	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_iterator_choose() {$/;"	f
test_iterator_choose_stable	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_iterator_choose_stable() {$/;"	f
test_iterator_choose_stable_stability	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_iterator_choose_stable_stability() {$/;"	f
test_make_an_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_make_an_iter() {$/;"	f
test_misc	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn test_misc() {$/;"	f
test_multiple_weighted_distributions	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_multiple_weighted_distributions() {$/;"	f
test_multiple_weighted_edge_cases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_multiple_weighted_edge_cases() {$/;"	f
test_partial_shuffle	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_partial_shuffle() {$/;"	f
test_random	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^    fn test_random() {$/;"	f
test_reader_rng_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_fill_bytes() {$/;"	f
test_reader_rng_insufficient_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_insufficient_bytes() {$/;"	f
test_reader_rng_u32	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u32() {$/;"	f
test_reader_rng_u64	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u64() {$/;"	f
test_reseeding	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn test_reseeding() {$/;"	f
test_rng_boxed_trait	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_rng_boxed_trait() {$/;"	f
test_rng_trait_object	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_rng_trait_object() {$/;"	f
test_sample_alg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_sample_alg() {$/;"	f
test_sample_boundaries	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_sample_boundaries() {$/;"	f
test_sample_iter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_sample_iter() {$/;"	f
test_sample_weighted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_sample_weighted() {$/;"	f
test_samples	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f
test_samples	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq>(zero: T, expected: &[T])$/;"	f
test_samples	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f
test_samples	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        fn test_samples<T: SampleUniform + Copy + core::fmt::Debug + PartialEq>($/;"	f
test_samples	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^        fn test_samples<X: SampleUniform + PartialOrd, I>($/;"	f
test_serialization_index_vec	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_serialization_index_vec() {$/;"	f
test_serialization_step_rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn test_serialization_step_rng() {$/;"	f
test_serialization_uniform_duration	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_serialization_uniform_duration() {$/;"	f
test_serializing_deserializing_bernoulli	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn test_serializing_deserializing_bernoulli() {$/;"	f
test_set_handler	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^fn test_set_handler() {$/;"	f
test_shuffle	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_shuffle() {$/;"	f
test_slice_choose	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_slice_choose() {$/;"	f
test_stdrng_construction	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn test_stdrng_construction() {$/;"	f
test_style_contains	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn test_style_contains() {$/;"	f
test_thread_rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn test_thread_rng() {$/;"	f
test_trivial	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn test_trivial() {$/;"	f
test_try_from_with_invalid_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn test_try_from_with_invalid_string() {$/;"	f
test_try_from_with_valid_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn test_try_from_with_valid_string() {$/;"	f
test_uniform_bad_limits_equal_int	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_equal_int() {$/;"	f
test_uniform_bad_limits_flipped_int	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_flipped_int() {$/;"	f
test_uniform_from_std_range	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range() {$/;"	f
test_uniform_from_std_range_inclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range_inclusive() {$/;"	f
test_uniform_good_limits_equal_int	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_good_limits_equal_int() {$/;"	f
test_uniform_serialization	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_serialization() {$/;"	f
test_update_weights	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_update_weights() {$/;"	f
test_weighted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_weighted() {$/;"	f
test_weightedindex	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_weightedindex() {$/;"	f
test_weightedindex_serde1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_weightedindex_serde1() {$/;"	f
test_yaml	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    fn test_yaml() {$/;"	f
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/matched_arg.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^mod tests {$/;"	m
tests	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^mod tests {$/;"	m
text_wrapper	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^fn text_wrapper(help: &str, width: usize) -> String {$/;"	f
thread_rng	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^pub fn thread_rng() -> ThreadRng {$/;"	f
three1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn three1() {$/;"	f
three2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn three2() {$/;"	f
to_bg_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    pub fn to_bg_str(&self) -> Cow<'static, str> {$/;"	f
to_fg_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    pub fn to_fg_str(&self) -> Cow<'static, str> {$/;"	f
to_possible_value	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn to_possible_value<'a>(&self) -> Option<PossibleValue<'a>>;$/;"	f
to_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn to_str<'a>(self) -> &'a str {$/;"	f
to_u8	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn to_u8(self) -> u8 {$/;"	f
token	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^fn token(b: u8) -> bool {$/;"	f
trace	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! trace { ($($x:tt)*) => ($/;"	d
trace	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^            macro_rules! trace (($($tt:tt)*) => {{}});$/;"	d
trailing_var_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn trailing_var_arg(self, yes: bool) -> Self {$/;"	f
truecolor	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn truecolor(self, r: u8, g: u8, b: u8) -> ColoredString$/;"	f
try_contains_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn try_contains_id(&self, id: &str) -> Result<bool, MatchesError> {$/;"	f
try_fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^            fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error> {$/;"	f
try_fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error> {$/;"	f
try_fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error>;$/;"	f
try_fill	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn try_fill<T: Fill + ?Sized>(&mut self, dest: &mut T) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/regex.rs	/^    fn try_from(r: &'a str) -> Result<Self, Self::Error> {$/;"	f
try_get_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn try_get_arg(&self, arg: &Id) -> Result<Option<&MatchedArg>, MatchesError> {$/;"	f
try_get_arg_t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn try_get_arg_t<T: Any + Send + Sync + 'static>($/;"	f
try_get_many	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn try_get_many<T: Any + Clone + Send + Sync + 'static>($/;"	f
try_get_matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn try_get_matches(self) -> ClapResult<ArgMatches> {$/;"	f
try_get_matches_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn try_get_matches_from<I, T>(mut self, itr: I) -> ClapResult<ArgMatches>$/;"	f
try_get_matches_from_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn try_get_matches_from_mut<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches>$/;"	f
try_get_one	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn try_get_one<T: Any + Clone + Send + Sync + 'static>($/;"	f
try_get_raw	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn try_get_raw(&self, id: &str) -> Result<Option<RawValues<'_>>, MatchesError> {$/;"	f
try_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^fn try_help(c: &mut Colorizer, help: Option<&str>) {$/;"	f
try_parse	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn try_parse() -> Result<Self, Error> {$/;"	f
try_parse_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn try_parse_from<I, It>(itr: I) -> Result<Self, Error>$/;"	f
try_parse_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn try_parse_from<I, T>(itr: I) -> Result<Self, Error>$/;"	f
try_remove_arg_t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn try_remove_arg_t<T: Any + Send + Sync + 'static>($/;"	f
try_remove_many	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn try_remove_many<T: Any + Clone + Send + Sync + 'static>($/;"	f
try_remove_one	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn try_remove_one<T: Any + Clone + Send + Sync + 'static>($/;"	f
try_update_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn try_update_from<I, T>(&mut self, itr: I) -> Result<(), Error>$/;"	f
tuple_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^macro_rules! tuple_impl {$/;"	d
two1	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn two1() {$/;"	f
two2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn two2() {$/;"	f
two3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn two3() {$/;"	f
two_elements_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^fn two_elements_of<I, T>(mut iter: I) -> Option<(T, T)>$/;"	f
two_groups_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    fn two_groups_of<F>(&self, condition: F) -> Option<(&ArgGroup, &ArgGroup)>$/;"	f
type_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn type_id(&self) -> AnyValueId {$/;"	f
type_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn type_id(&self) -> AnyValueId;$/;"	f
type_id	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    pub fn type_id(&self) -> AnyValueId {$/;"	f
u8_to_styles_invalid_is_none	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    mod u8_to_styles_invalid_is_none {$/;"	m
u8_to_styles_isomorphism	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    mod u8_to_styles_isomorphism {$/;"	m
underline	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn underline(mut self) -> ColoredString {$/;"	f
underline	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn underline(self) -> ColoredString {$/;"	f
underline	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn underline(self) -> ColoredString;$/;"	f
uniform_distributions_can_be_compared	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn uniform_distributions_can_be_compared() {$/;"	f
uniform_float_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^macro_rules! uniform_float_impl {$/;"	d
uniform_int_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^macro_rules! uniform_int_impl {$/;"	d
uniform_simd_int_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^macro_rules! uniform_simd_int_impl {$/;"	d
unset	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn unset(self, s: ArgSettings) -> Self {$/;"	f
unset_global_setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn unset_global_setting(mut self, setting: AppSettings) -> Self {$/;"	f
unset_override	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn unset_override(&self) {$/;"	f
unset_override	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub fn unset_override() {$/;"	f
unset_setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn unset_setting<F>(mut self, setting: F) -> Self$/;"	f
unset_setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn unset_setting<F>(mut self, setting: F) -> Self$/;"	f
unset_settings	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn unset_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
unwrap_os_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^fn unwrap_os_string(value: &AnyValue) -> &OsStr {$/;"	f
unwrap_os_string_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^fn unwrap_os_string_arg<'v>(id: &Id, value: &'v AnyValue) -> &'v OsStr {$/;"	f
unwrap_string	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^fn unwrap_string(value: &AnyValue) -> &str {$/;"	f
unwrap_string_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^fn unwrap_string_arg<'v>(id: &Id, value: &'v AnyValue) -> &'v str {$/;"	f
update_from	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn update_from<I, T>(&mut self, itr: I)$/;"	f
update_from_arg_matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error> {$/;"	f
update_from_arg_matches	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error>;$/;"	f
update_from_arg_matches_mut	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn update_from_arg_matches_mut(&mut self, matches: &mut ArgMatches) -> Result<(), Error> {$/;"	f
update_weights	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    pub fn update_weights(&mut self, new_weights: &[(usize, &X)]) -> Result<(), WeightedError>$/;"	f
usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn usage<S: Into<&'help str>>(self, usage: S) -> Self {$/;"	f
use_delimiter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn use_delimiter(self, yes: bool) -> Self {$/;"	f
use_stderr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn use_stderr(&self) -> bool {$/;"	f
use_value_delimiter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn use_value_delimiter(mut self, yes: bool) -> Self {$/;"	f
val	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn val(&mut self, arg: &Arg<'help>) -> io::Result<()> {$/;"	f
validate_arg_num_occurs	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_arg_num_occurs(&self, a: &Arg, ma: &MatchedArg) -> ClapResult<()> {$/;"	f
validate_arg_num_vals	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_arg_num_vals(&self, a: &Arg, ma: &MatchedArg) -> ClapResult<()> {$/;"	f
validate_arg_values	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_arg_values(&self, arg: &Arg, ma: &MatchedArg) -> ClapResult<()> {$/;"	f
validate_conflicts	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_conflicts($/;"	f
validate_exclusive	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_exclusive(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	f
validate_matched_args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_matched_args(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	f
validate_required	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_required($/;"	f
validate_required_unless	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/validator.rs	/^    fn validate_required_unless(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	f
validator	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn validator<F, O, E>(mut self, mut f: F) -> Self$/;"	f
validator_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn validator_os<F, O, E>(mut self, mut f: F) -> Self$/;"	f
validator_regex	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn validator_regex($/;"	f
value_delimiter	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn value_delimiter(mut self, d: char) -> Self {$/;"	f
value_hint	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn value_hint(mut self, value_hint: ValueHint) -> Self {$/;"	f
value_isomorph	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        macro_rules! value_isomorph {$/;"	d
value_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn value_name(self, name: &'help str) -> Self {$/;"	f
value_names	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn value_names(mut self, names: &[&'help str]) -> Self {$/;"	f
value_names_building_num_vals_from_usage	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/usage_parser.rs	/^    fn value_names_building_num_vals_from_usage() {$/;"	f
value_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn value_of<T: Key>(&self, id: T) -> Option<&str> {$/;"	f
value_of_lossy	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn value_of_lossy<T: Key>(&self, id: T) -> Option<Cow<'_, str>> {$/;"	f
value_of_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn value_of_os<T: Key>(&self, id: T) -> Option<&OsStr> {$/;"	f
value_of_t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn value_of_t<R>(&self, name: &str) -> Result<R, Error>$/;"	f
value_of_t_or_exit	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn value_of_t_or_exit<R>(&self, name: &str) -> R$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn value_parser(mut self, parser: impl Into<super::ValueParser>) -> Self {$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Output {$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Output;$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Parser {$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Parser;$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser {$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser;$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser;$/;"	f
value_parser	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^macro_rules! value_parser {$/;"	d
value_source	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn value_source<T: Key>(&self, id: T) -> Option<ValueSource> {$/;"	f
value_stability	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn value_stability() {$/;"	f
value_stability_choose	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_choose() {$/;"	f
value_stability_choose_multiple	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_choose_multiple() {$/;"	f
value_stability_choose_stable	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_choose_stable() {$/;"	f
value_stability_sample	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn value_stability_sample() {$/;"	f
value_stability_slice	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_slice() {$/;"	f
value_t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! value_t {$/;"	d
value_t_or_exit	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! value_t_or_exit {$/;"	d
value_terminator	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn value_terminator(mut self, term: &'help str) -> Self {$/;"	f
value_variants	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/derive.rs	/^    fn value_variants<'a>() -> &'a [Self];$/;"	f
values_exact_size	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn values_exact_size() {$/;"	f
values_of	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn values_of<T: Key>(&self, id: T) -> Option<Values> {$/;"	f
values_of_lossy	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn values_of_lossy<T: Key>(&self, id: T) -> Option<Vec<String>> {$/;"	f
values_of_os	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn values_of_os<T: Key>(&self, id: T) -> Option<OsValues> {$/;"	f
values_of_t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn values_of_t<R>(&self, name: &str) -> Result<Vec<R>, Error>$/;"	f
values_of_t_or_exit	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    pub fn values_of_t_or_exit<R>(&self, name: &str) -> Vec<R>$/;"	f
values_t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! values_t {$/;"	d
values_t_or_exit	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! values_t_or_exit {$/;"	d
variants	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^            pub fn variants() -> [&'static str; $crate::_clap_count_exprs!($(stringify!($v)),+)] {$/;"	f
verify_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn verify_arg(&self, _arg: &Id) -> Result<(), MatchesError> {$/;"	f
verify_arg_t	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/matches/arg_matches.rs	/^    fn verify_arg_t<T: Any + Send + Sync + 'static>($/;"	f
version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn version<S: Into<&'help str>>(mut self, ver: S) -> Self {$/;"	f
version_err	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/parser/parser.rs	/^    fn version_err(&self, use_long: bool) -> ClapError {$/;"	f
version_message	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn version_message(self, s: impl Into<&'help str>) -> Self {$/;"	f
version_short	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn version_short(self, c: char) -> Self {$/;"	f
via_prelude	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/value_parser.rs	/^pub mod via_prelude {$/;"	m
visible_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn visible_alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	f
visible_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn visible_alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	f
visible_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn visible_aliases(mut self, names: &[&'help str]) -> Self {$/;"	f
visible_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn visible_aliases(mut self, names: &[&'help str]) -> Self {$/;"	f
visible_long_flag_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn visible_long_flag_alias(mut self, name: &'help str) -> Self {$/;"	f
visible_long_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn visible_long_flag_aliases(mut self, names: &[&'help str]) -> Self {$/;"	f
visible_short_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn visible_short_alias(mut self, name: char) -> Self {$/;"	f
visible_short_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn visible_short_aliases(mut self, names: &[char]) -> Self {$/;"	f
visible_short_flag_alias	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn visible_short_flag_alias(mut self, name: char) -> Self {$/;"	f
visible_short_flag_aliases	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn visible_short_flag_aliases(mut self, names: &[char]) -> Self {$/;"	f
warn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! warn { ($($x:tt)*) => ($/;"	d
warn	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/shared_memory-0.12.4/src/lib.rs	/^            macro_rules! warn (($($tt:tt)*) => {{}});$/;"	d
warning	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn warning<T: Into<String> + AsRef<[u8]>>(&mut self, msg: T) -> io::Result<()> {$/;"	f
weighted_index_distributions_can_be_compared	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn weighted_index_distributions_can_be_compared() {$/;"	f
white	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn white(self) -> ColoredString$/;"	f
will_args_wrap	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn will_args_wrap(&self, args: &[&Arg<'help>], longest: usize) -> bool {$/;"	f
will_subcommands_wrap	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn will_subcommands_wrap<'a>($/;"	f
with_description	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    pub fn with_description(description: String, kind: ErrorKind) -> Self {$/;"	f
with_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg.rs	/^    pub fn with_name<S: Into<&'help str>>(n: S) -> Self {$/;"	f
with_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/arg_group.rs	/^    pub fn with_name<S: Into<&'help str>>(n: S) -> Self {$/;"	f
with_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/lib.rs	/^    pub fn with_name<'help>(name: &str) -> App<'help> {$/;"	f
wlnerr	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/macros.rs	/^macro_rules! wlnerr {$/;"	d
wmul	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^                fn wmul(self, b: $ty) -> Self::Output {$/;"	f
wmul	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^                fn wmul(self, x: $ty) -> Self::Output {$/;"	f
wmul	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn wmul(self, b: $ty) -> Self::Output {$/;"	f
wmul	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn wmul(self, x: $ty) -> Self::Output {$/;"	f
wmul	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^            fn wmul(self, x: usize) -> Self::Output {$/;"	f
wmul	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn wmul(self, x: RHS) -> Self::Output;$/;"	f
wmul_impl	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! wmul_impl {$/;"	d
wmul_impl_16	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    macro_rules! wmul_impl_16 {$/;"	d
wmul_impl_large	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! wmul_impl_large {$/;"	d
wmul_impl_usize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! wmul_impl_usize {$/;"	d
wrap_help_last_word	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn wrap_help_last_word() {$/;"	f
write	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/util/fnv.rs	/^    fn write(&mut self, bytes: &[u8]) {$/;"	f
write	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/ctrlc-3.2.3/src/tests.rs	/^        fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_about	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_about(&mut self, before_new_line: bool, after_new_line: bool) -> io::Result<()> {$/;"	f
write_after_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_after_help(&mut self) -> io::Result<()> {$/;"	f
write_arg	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_arg($/;"	f
write_args	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_args(&mut self, args: &[&Arg<'help>], _category: &str) -> io::Result<()> {$/;"	f
write_args_unsorted	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_args_unsorted(&mut self, args: &[&Arg<'help>]) -> io::Result<()> {$/;"	f
write_author	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_author(&mut self, before_new_line: bool, after_new_line: bool) -> io::Result<()> {$/;"	f
write_before_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_before_help(&mut self) -> io::Result<()> {$/;"	f
write_bin_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_bin_name(&mut self) -> io::Result<()> {$/;"	f
write_display_name	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_display_name(&mut self) -> io::Result<()> {$/;"	f
write_dynamic_context	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/error/mod.rs	/^    fn write_dynamic_context(&self, c: &mut Colorizer) -> bool {$/;"	f
write_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn write_help<W: io::Write>(&mut self, w: &mut W) -> io::Result<()> {$/;"	f
write_long_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn write_long_help<W: io::Write>(&mut self, w: &mut W) -> io::Result<()> {$/;"	f
write_long_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn write_long_version<W: io::Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_method	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^macro_rules! write_method {$/;"	d
write_subcommand	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_subcommand($/;"	f
write_subcommands	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_subcommands(&mut self, cmd: &Command<'help>) -> io::Result<()> {$/;"	f
write_templated_help	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_templated_help(&mut self, template: &str) -> io::Result<()> {$/;"	f
write_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/command.rs	/^    pub fn write_version<W: io::Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_version	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/output/help.rs	/^    fn write_version(&mut self) -> io::Result<()> {$/;"	f
yaml_char	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_char {$/;"	d
yaml_opt_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_opt_str {$/;"	d
yaml_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_str {$/;"	d
yaml_to_bool	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_to_bool {$/;"	d
yaml_to_char	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_to_char {$/;"	d
yaml_to_setting	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_to_setting {$/;"	d
yaml_to_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_to_str {$/;"	d
yaml_to_usize	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_to_usize {$/;"	d
yaml_tuple2	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_tuple2 {$/;"	d
yaml_tuple3	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_tuple3 {$/;"	d
yaml_vec	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_vec {$/;"	d
yaml_vec_or_str	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.2.22/src/builder/macros.rs	/^macro_rules! yaml_vec_or_str {$/;"	d
yellow	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn yellow(self) -> ColoredString$/;"	f
zero	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn zero() -> Self {$/;"	f
zero	/home/tgunter/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn zero() -> Self;$/;"	f
